% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-lexis.R
\name{geom_lexis}
\alias{geom_lexis}
\title{Lexis charts}
\usage{
geom_lexis(
  mapping = NULL,
  data = NULL,
  ...,
  point.colour = NULL,
  point.size = NULL,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{...}{other arguments passed on to \code{\link{layer}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{color = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{point.colour}{the colour of the point}

\item{point.size}{the size of the point}

\item{na.rm}{If \code{FALSE} (the default), removes missing values with
a warning.  If \code{TRUE} silently removes missing values.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}
}
\description{
The lexis geom is used to plot 45° "lifelines" for each cohort. Lexis diagrams
are used by demographers for more than a century and they are named after Wilhelm Lexis.
They are a combination of a segment, starting at 0 with a dot at the end.
}
\details{
This geom draws 45° lines from the start to the end of a lifetime. The geom
generates one variable called \code{'type'} in the layer data, that you can map
with \code{\link[=after_scale]{after_scale()}} to an aesthetic.
See the examples and \code{vignette("ggpointless")} for more details.
}
\section{Aesthetics}{

geom_pointless() understands the following aesthetics (required aesthetics are in bold):
\itemize{
\item \strong{x}
\item \strong{xend}
\item alpha
\item color
\item fill
\item group
\item shape
\item size
\item linetype
\item stroke
}
}

\examples{

df1 <- data.frame(
 key = c("A", "B", "B", "C", "D", "E"),
 start = c(0, 1, 6, 5, 6, 9),
 end = c(5, 4, 10, 9, 8, 11)
)
ggplot(df1, aes(x = start, xend = end, color = key)) +
 geom_lexis() +
 coord_equal()

ggplot(df1, aes(x = start, xend = end, color = key)) +
 geom_lexis(aes(linetype = after_scale(type))) +
 coord_equal()

}
