[{"path":"https://flrd.github.io/ggpointless/dev/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://flrd.github.io/ggpointless/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ggpointless authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/articles/examples.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"ggpointless examples","text":"","code":"library(ggplot2) library(ggpointless) library(ggtext) library(ggrepel) library(scales) text_size <- 2.5 text_color <- \"#4b4c4d\"  theme_set(theme_minimal() +   theme(plot.caption = element_text(hjust = 0)) +   theme(plot.caption.position = \"plot\") +   theme(text = element_text(size = 9, color = text_color)) +   theme(axis.ticks.length.x = unit(0, \"mm\")) +   theme(axis.ticks.length.y = unit(0, \"mm\")) +   # https://stackoverflow.com/a/17312440/8583393   theme(axis.title = element_text(size = text_size * 1 / 0.352777778)) +   theme(axis.title.x = element_text(hjust = 1)) +   theme(axis.title.y = element_text(hjust = 1, angle = 0)) +   theme(panel.grid.minor = element_blank()) +   theme(legend.position = \"none\") +   theme(plot.title = element_text(face = \"bold\")) +   theme(plot.title.position = \"plot\"))"},{"path":"https://flrd.github.io/ggpointless/dev/articles/examples.html","id":"carbon-dioxide-concentration-in-the-atmosphere","dir":"Articles","previous_headings":"","what":"Carbon Dioxide Concentration in the Atmosphere","title":"ggpointless examples","text":"’ll start recreate Gregor Aisch’s plot carbon dioxide concentration time. co2_ml data.frame monthly CO2 measurements March 1958 January 2022, taken Mauna Loa, Hawaii . order plot line decade common scale, first need add one additional variable co2_ml ’ll call date_scale. Also, create helper function change date labels x-axis.","code":"data(co2_ml) co2_ml$date_scale <- as.Date(sprintf(\"%d-%d-01\", 1950 + (co2_ml$year %% 10), co2_ml$month)) axis_labeller <- function(date) {   year <- as.integer(format(date, \"%Y\"))   tmp <- year - min(year, na.rm = TRUE)   replace(tmp, !tmp, \"\") } # layers p1 <- ggplot(co2_ml, aes(date_scale, co2_ppm, color = decade)) # sustainable level p1 <- p1 + geom_hline(aes(yintercept = 350),   color = \"#dbd9db\",   size = 1 ) p1 <- p1 + geom_text(aes(x = as.Date(\"1951-01-01\"), y = 348),   label = \"sustainable level\",   size = text_size + .3,   color = \"#dbd9db\",   hjust = \"left\",   inherit.aes = FALSE ) p1 <- p1 + geom_line() p1 <- p1 + geom_pointless(location = c(\"first\", \"last\"), size = 2) # label decades p1 <- p1 + geom_text(   data = subset(co2_ml, subset = decade != \"2020's\"),   aes(label = decade),   size = text_size,   stat = \"pointless\",   location = \"last\",   hjust = \"left\",   nudge_x = 40 ) # label at first year in decade p1 <- p1 + geom_text(   data = subset(co2_ml, subset = decade != \"1950's\"),   aes(label = year, group = decade),   size = text_size,   color = text_color,   stat = \"pointless\",   location = \"first\",   vjust = \"top\",   hjust = \"left\",   nudge_y = -2 )  # label at last year in decade p1 <- p1 + geom_text(   data = subset(co2_ml, subset = !(decade %in% c(\"1950's\", \"2020's\"))),   aes(label = year, group = decade),   size = text_size,   color = text_color,   stat = \"pointless\",   location = \"maximum\",   vjust = \"bottom\",   nudge_y = 1 )  # label the years 2014 to 2018 in the format '%y p1 <- p1 + lapply(2014:2018, function(yrs) {   geom_text(     data = subset(co2_ml, subset = year == yrs),     aes(label = sprintf(\"'%i\", year %% 100), group = year),     size = text_size,     color = text_color,     stat = \"pointless\",     location = \"maximum\",     vjust = \"bottom\",     nudge_y = 1   ) })  #  highlight all-time maximum p1 <- p1 + geom_pointless(   data = subset(co2_ml, subset = decade == \"2020's\"),   location = \"maximum\",   size = 8,   shape = 21,   fill = NA,   stroke = .9 )  # label all-time maximum p1 <- p1 + ggtext::geom_richtext(   aes(     x = date_scale + 500,     y = co2_ppm - 3,     group = NULL,     label = sprintf(\"**%g ppm**<br>%s %s\", round(co2_ppm), month.name[month], year)   ),   stat = \"pointless\",   location = \"maximum\",   size = text_size,   color = text_color,   fill = NA,   label.color = NA )  # draw curve from all-time maximum to its label p1 <- p1 + geom_curve(   data = subset(co2_ml, subset = decade == \"2020's\"),   aes(     x = date_scale + 90,     xend = date_scale + 500,     y = co2_ppm + 2,     yend = co2_ppm + 2   ),   stat = \"pointless\",   location = \"maximum\",   curvature = -.4,   size = .35,   color = text_color,   inherit.aes = FALSE )  # scales p1 <- p1 + scale_x_date(   breaks = as.Date(sprintf(\"%i-01-01\", c(1950:1960))),   labels = axis_labeller,   expand = expansion(mult = c(0.01, -.03)),   limits = as.Date(sprintf(\"%i-01-01\", c(1950, 1961))) )  # colors p1 <- p1 + scale_color_manual(   values = c(     \"#f4ae1b\",     \"#e99950\",     \"#dc8471\",     \"#cc708f\",     \"#b85baa\",     \"#9f46c6\",     \"#7a31e1\",     \"#311dfc\"   ) )  # title, subtitle, caption p1 <- p1 +   labs(     title = \"Carbon Dioxide Concentration in the Atmosphere\",     subtitle = \"Each line represents one decade, from 1958 to 2022. CO2 concentration is measured in\\nparts per million* (ppm).\",     caption = \"*The mole fraction of CO2, expressed as parts per million (ppm) is the number of molecules of CO2 in every million\\nmolecules of dried air (water vapor removed). The 'sustainable level' of 350ppm, equivalent to the 1990 levels, has\\nbeen identified by UN climate scientists.\\nSource: National Oceanic & Atmospheric Adm. (NOAA)\",     x = \"Years into decade\",     y = \"ppm\"   )"},{"path":"https://flrd.github.io/ggpointless/dev/articles/examples.html","id":"rates-of-covid-19-cases-and-deaths-by-vaccination-status","dir":"Articles","previous_headings":"","what":"Rates of COVID-19 Cases and Deaths by Vaccination Status","title":"ggpointless examples","text":"following two charts show age-adjusted daily cases death rates vaccinated unvaccinated people 26 states USA. example inspired graphic New York Times Coronavirus Map Cases. , create helper function, time change facet labels:","code":"data(covid_vac) covid_labeller <- function(label) {   sprintf(\"Average daily %ss\", label) } # layers p2 <- ggplot(   covid_vac,   aes(     x = date,     y = incidence / 7,     color = interaction(outcome, status)   ) ) p2 <- p2 + geom_step(size = .65, direction = \"vh\") p2 <- p2 + geom_text(   aes(label = status),   stat = \"pointless\",   location = \"last\",   size = text_size,   nudge_x = 5,   hjust = \"left\" ) +   geom_pointless(size = 3)  # facets p2 <- p2 + facet_wrap(   vars(outcome),   ncol = 1,   scales = \"free_y\",   labeller = as_labeller(covid_labeller) )  # scales p2 <- p2 + scale_x_date(expand = expansion(mult = c(0, 0.2))) p2 <- p2 + scale_y_continuous(n.breaks = 4) p2 <- p2 + scale_color_manual(   values = c(     \"case.unvaccinated\" = \"#050038\",     \"case.fully vaccinated\" = \"#9187f7\",     \"death.unvaccinated\" = \"#f14e1c\",     \"death.fully vaccinated\" = \"#f8a187\"   ) )  # title, subtitle, caption p2 <- p2 +   labs(     title = \"Rates for vaccinated and unvaccinated\",     subtitle = \"Per 100,000\",     x = NULL,     y = NULL,     caption = \"Source: Centers for Disease Control and Prevention\\nRates of COVID-19 Cases and Deaths by Vaccination Status, Apr 2021 to Dec 2021.\"   )  # theme p2 <- p2 + theme(panel.grid.major.x = element_blank()) p2 <- p2 + theme(strip.text = element_text(hjust = 0, face = \"bold\"))"},{"path":"https://flrd.github.io/ggpointless/dev/articles/examples.html","id":"female-leaders-of-independent-states","dir":"Articles","previous_headings":"","what":"Female leaders of independent states","title":"ggpointless examples","text":"data used comes Wikipedia article List elected appointed female heads state government collected dataset female_leaders. plot, want answer question: women office 12 years? inspiration add geom_lexis() came Gregor Aisch. time post Three decades European government leaders. Let’s see close can get example data original plot.","code":"# Sirimavo Bandaranaike was both in executive and non-executive position # setting power to last observation by person female_leaders <- merge(   female_leaders[, c(\"name\", \"startdate\", \"enddate\", \"country\"), ],   aggregate(. ~ name, female_leaders, tail, 1)[, c(\"name\", \"country\", \"power\")],   all.x = TRUE )  tmp <- aggregate(   days_in_office ~ name,   transform(female_leaders, days_in_office = enddate - startdate),   sum ) # 365.25 is an approximation of course tmp <- subset(tmp, days_in_office / 365.25 > 12) leaders_12 <- merge(tmp, female_leaders, by = \"name\") leaders_12 <- leaders_12[order(leaders_12$name, leaders_12$enddate), ] leaders_12 <- aggregate(. ~ name, leaders_12, tail, 1) # aggregate() returns dates as characters leaders_12 <- type.convert(leaders_12, as.is = TRUE) leaders_12$familyName <- vapply(   X = strsplit(leaders_12$name, split = \" \"),   FUN = function(name) name[length(name)],   FUN.VALUE = character(1) ) p3 <- ggplot(   female_leaders,   aes(     x = startdate,     xend = enddate,     group = name,     color = power   ) ) p3 <- p3 + geom_lexis(   aes(linetype = after_stat(type)),   size = 1 )  # coord p3 <- p3 + coord_equal()  # scales p3 <- p3 + scale_x_date(expand = c(.02, .05)) p3 <- p3 + scale_y_continuous(   limits = c(0, 7400),   breaks = c(0, 4, 8, 12, 16, 20) * 365.25,   labels = function(i) floor(i / 365.25)) p3 <- p3 + scale_color_manual(values = c(   \"executive\" = \"#311dfc\",   \"non-executive\" = \"#f4ae1b\" )) p3 <- p3 + scale_linetype_identity()  # title, subtitle, caption p3 <- p3 + labs(   title = \"Elected Female Leaders\",   subtitle = \"Years in Office\",   caption = \"Highlighted are women that are in office for more than 12 years.\\nSource: Wikipedia\",   x = NULL,   y = NULL,   color = NULL ) p3 <- p3 + theme(legend.position = \"bottom\")  # annotations p3 <- p3 +   geom_text_repel(     data = leaders_12, aes(       x = as.Date(enddate, origin = \"1970-01-01\"),       y = days_in_office,       colour = power,       label = familyName     ),     size = 2,     direction = \"y\",     nudge_y = 10,     inherit.aes = FALSE,     show.legend = FALSE)"},{"path":"https://flrd.github.io/ggpointless/dev/articles/ggpointless.html","id":"geom_pointless","dir":"Articles","previous_headings":"","what":"geom_pointless","title":"Introduction to ggpointless","text":"geom_pointless() layer easily add minimal emphasis plots. function takes ’s power stat_pointless(), work, usually spotlight.  see, just adding geom_pointless() ggplot(...) terribly useful teams geom_line() friends, hopefully.  geom_pointless() behaves like geom_point() addition location argument. can set \"first\", \"last\" (default), \"minimum\", \"maximum\", \"\"; \"\" just shorthand select \"first\", \"last\", \"minimum\" \"maximum\". addition, can use computed variable location map aesthetic, e.g. color.","code":"library(ggplot2) library(ggpointless)  x <- seq(-pi, pi, length.out = 100) y <- outer(x, 1:5, function(x, y) sin(x * y))  df1 <- data.frame(   var1 = x,   var2 = rowSums(y) )  p <- ggplot(df1, aes(x = var1, y = var2)) p + geom_pointless(location = c(\"first\", \"last\", \"minimum\", \"maximum\")) p <- p + geom_line() p + geom_pointless(location = \"all\", size = 3) p + geom_pointless(aes(color = after_stat(location)),   location = \"all\",   size = 3 ) +   theme(legend.position = \"bottom\")"},{"path":"https://flrd.github.io/ggpointless/dev/articles/ggpointless.html","id":"order-and-orientation","dir":"Articles","previous_headings":"geom_pointless","what":"Order and orientation","title":"Introduction to ggpointless","text":"locations determined order appear data, like geom_path() compared geom_line(). can seen next example, sample data kindly taken geomtextpath package:  see first last two examples \"first\" \"minimum\" overlap, \"first\" wins \"minimum\". location set \"\", order points plotted top bottom : \"first\" > \"last\" > \"minimum\" > \"maximum\". Otherwise, order determined specified location argument, also applies order legend key labels.","code":"x <- seq(5, -1, length.out = 1000) * pi spiral <- data.frame(   var1 = sin(x) * 1:1000,   var2 = cos(x) * 1:1000 )  p <- ggplot(spiral) +   geom_path() +   coord_equal(xlim = c(-1000, 1000), ylim = c(-1000, 1000)) +   theme(legend.position = \"none\")  p + aes(x = var1, y = var2) +   geom_pointless(aes(color = after_stat(location)),     location = \"all\",     size = 3   ) +   labs(subtitle = \"orientation = 'x'\")  p + aes(y = var1, x = var2) +   geom_pointless(aes(color = after_stat(location)),     location = \"all\",     size = 3   ) +   labs(subtitle = \"orientation = 'y'\") cols <- c(   \"first\" = \"#f8766d\",   \"last\" = \"#7cae00\",   \"minimum\" = \"#00bfc4\",   \"maximum\" = \"#c77cff\" )  df2 <- data.frame(   var1 = 1:2,   var2 = 1:2 )  p <- ggplot(df2, aes(x = var1, y = var2)) +   geom_path() +   coord_equal() +   scale_color_manual(values = cols)  # same as location = 'all' p + geom_pointless(aes(color = after_stat(location)),   location = c(\"first\", \"last\", \"minimum\", \"maximum\"),   size = 3 ) +   labs(subtitle = \"same as location = 'all'\") # reversed order p + geom_pointless(aes(color = after_stat(location)),   location = c(\"maximum\", \"minimum\", \"last\", \"first\"),   size = 3 ) +   labs(subtitle = \"custom order\") # same as location = 'all' again p + geom_pointless(aes(color = after_stat(location)),   location = c(\"maximum\", \"minimum\", \"last\", \"first\", \"all\"),   size = 3 ) +   labs(subtitle = \"same as location = 'all' again\")"},{"path":"https://flrd.github.io/ggpointless/dev/articles/ggpointless.html","id":"pick-a-different-geom","dir":"Articles","previous_headings":"geom_pointless","what":"Pick a different geom","title":"Introduction to ggpointless","text":"Just like stat_* functions, stat_pointless() default geom, \"point\". means reverse can highlight e.g. minimum maximum another way, example horizontal line.","code":"set.seed(42) ggplot(data.frame(x = 1:10, y = sample(1:10)), aes(x, y)) +   geom_line() +   stat_pointless(     aes(yintercept = y, color = after_stat(location)),     location = c(\"minimum\", \"maximum\"),     geom = \"hline\"   ) +   guides(color = guide_legend(reverse = TRUE))"},{"path":"https://flrd.github.io/ggpointless/dev/articles/ggpointless.html","id":"plotting-lifelines-with-geom_lexis","dir":"Articles","previous_headings":"","what":"Plotting lifelines with geom_lexis","title":"Introduction to ggpointless","text":"geom_lexis() draws lifeline event ’s start ’s end. required aesthetics x xend. example:  Also, gap event horizontal line drawn, can hidden setting gap_filler = FALSE.  can style appearance plot using additional arguments. e.g. want make visual distinction ascending lines connecting lines, use after_stat() map type variable linetype aesthetic (aesthetic). variable type created geom_lexis() takes two values: “solid” “dotted”; might also want call scale_linettype_identity.","code":"df1 <- data.frame(   key = c(\"A\", \"B\", \"B\", \"C\", \"D\"),   x = c(0, 1, 6, 5, 6),   y = c(5, 4, 10, 8, 10) )  p <- ggplot(df1, aes(x = x, xend = y, color = key)) +   coord_equal() p + geom_lexis() p + geom_lexis(gap_filler = FALSE) p + geom_lexis(   aes(linetype = after_stat(type)),   point_show = FALSE ) +   scale_linetype_identity()"},{"path":"https://flrd.github.io/ggpointless/dev/articles/ggpointless.html","id":"date-and-posixct-classes","dir":"Articles","previous_headings":"Plotting lifelines with geom_lexis","what":"Date and POSIXct classes","title":"Introduction to ggpointless","text":"see coordinates vertical y-axis show difference x xend aesthetics. “magic” geom_lexis() happens stat_lexis() input data transformed calculations performed.  Keeping mind dates internally represented number days, POSIXct class turn represents seconds since origin, y-scale values next plots come surprise.  order change breaks labels vertical scale , say, years, make assumption 1 year 365.25 days, 365.25 * 86400 seconds.","code":"df1 <- data.frame(   start = c(2019, 2021),   end = c(2022, 2022),   key = c(\"A\", \"B\") )  ggplot(df1, aes(x = start, xend = end, group = key)) +   geom_lexis() +   coord_fixed() # Date fun <- function(i, class) as.Date(paste0(i, \"-01-01\")) df1[, c(\"start\", \"end\")] <- lapply(df1[, c(\"start\", \"end\")], fun) p1 <- ggplot(df1, aes(x = start, xend = end, group = key)) +   geom_lexis() +   labs(y = \"days\") +   coord_fixed()  # POSIXct df2 <- df1 df2[, c(\"start\", \"end\")] <- lapply(df2[, c(\"start\", \"end\")], as.POSIXct) p2 <- ggplot(df2, aes(x = start, xend = end, group = key)) +   geom_lexis() +   labs(y = \"seconds\") +   coord_fixed()  p1 p2 # years, roughly p1 +   scale_y_continuous(     breaks = 0:3 * 365.25, # or for p2: 0:3*365.25*86400     labels = function(i) floor(i / 365.25) # floor(i / 365.25*86400)   ) +   labs(y = \"years\")"},{"path":"https://flrd.github.io/ggpointless/dev/articles/ggpointless.html","id":"geom_chaikin","dir":"Articles","previous_headings":"","what":"geom_chaikin","title":"Introduction to ggpointless","text":"algorithm geom_chaikin() function iteratively cuts ragged corners, can see example .","code":"set.seed(42) dat <- data.frame(   x = seq.int(10),   y = sample(15:30, 10) )  p1 <- ggplot(dat, aes(x, y)) +   geom_line(linetype = \"12\")  p1 +   geom_chaikin()"},{"path":"https://flrd.github.io/ggpointless/dev/articles/ggpointless.html","id":"geom_catenary","dir":"Articles","previous_headings":"","what":"geom_catenary","title":"Introduction to ggpointless","text":"catenary curve hanging chain cable weight supported ends (see Wikipedia information).  geom_catenary() calculates default value length chain set 2 times Euclidean distance x/y coordinates. Use `chainLength argument overwrite default.  Multiple x/y coordinates supported .  set chainLength value short connect two points, straight line drawn message shown.  want draw chain piece different chainLength value, remember can add list ggplot object:","code":"ggplot(data.frame(x = c(0, 1), y = c(1, 1)), aes(x, y)) +   geom_catenary() +   ylim(0, 1) #> Set chainLength to 2 ggplot(data.frame(x = c(0, 1), y = c(1, 1)), aes(x, y)) +   geom_catenary(chainLength = 1.5)  +   ylim(0, 1) ggplot(data.frame(x = c(0, 1, 4), y = c(1, 1, 1)), aes(x, y)) +   geom_catenary() #> Set chainLength to 8 ggplot(data.frame(x = c(0, 1, 4), y = c(1, 1, 1)), aes(x, y)) +   geom_catenary(chainLength = 4) #> Minimum chain length from '(1, 1)' to '(4, 1)' is 3, drawing a straight line. ggplot(data.frame(x = c(0, 1), y = 1),        aes(x, y)) +    lapply(2:10, function(chainLength) {     geom_catenary(chainLength = chainLength)   } )"},{"path":"https://flrd.github.io/ggpointless/dev/articles/ggpointless.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Introduction to ggpointless","text":"following data sets shipped ggpointless package: co2_ml : CO2 records taken Mauna Loa covid_vac : COVID-19 Cases Deaths Vaccination Status female_leaders : Elected appointed female heads state government See vignette(\"examples\") possible use cases.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Markus Döring. Author, maintainer, copyright holder.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Döring M (2024). ggpointless: Additional Geometries Stats 'ggplot2'. R package version 0.1.0.9000,  https://github.com/flrd/ggpointless, https://flrd.github.io/ggpointless/.","code":"@Manual{,   title = {ggpointless: Additional Geometries and Stats for 'ggplot2'},   author = {Markus Döring},   year = {2024},   note = {R package version 0.1.0.9000,  https://github.com/flrd/ggpointless},   url = {https://flrd.github.io/ggpointless/}, }"},{"path":"https://flrd.github.io/ggpointless/dev/index.html","id":"ggpointless-","dir":"","previous_headings":"","what":"Additional Geometries and Stats for ggplot2","title":"Additional Geometries and Stats for ggplot2","text":"ggpointless extension ggplot2 library providing additional layers.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Additional Geometries and Stats for ggplot2","text":"can install ggpointless CRAN : install development version GitHub use: installed package, attach calling:","code":"install.packages(\"ggpointless\") # install.packages(\"devtools\") devtools::install_github(\"flrd/ggpointless\") library(ggpointless)"},{"path":"https://flrd.github.io/ggpointless/dev/index.html","id":"what-will-you-get","dir":"","previous_headings":"","what":"What will you get","title":"Additional Geometries and Stats for ggplot2","text":"geom_pointless() – emphasizes observations points geom_lexis() – draws Lexis diagram geom_chaikin() – applies Chaikin’s corner cutting algorithm geom_catenary() – draws catenary curve See vignette(\"ggpointless\") details examples.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/index.html","id":"geom_pointless","dir":"","previous_headings":"What will you get","what":"geom_pointless","title":"Additional Geometries and Stats for ggplot2","text":"geom_pointless() let’s highlight first, last observations, sample minimum sample maximum provide additional context. just visual sugar. geom_pointless() behaves similar geom_point() except location argument. can set \"first\", \"last\" (default), \"minimum\", \"maximum\", \"\", \"\" just shorthand select \"first\", \"last\", \"minimum\" \"maximum\".","code":"cols <- c(\"#f4ae1b\", \"#d77e7b\", \"#a84dbd\", \"#311dfc\") theme_set(theme_minimal())  x <- seq(-pi, pi, length.out = 500) y <- outer(x, 1:5, function(x, y) sin(x * y))  df1 <- data.frame(   var1 = x,   var2 = rowSums(y) )  ggplot(df1, aes(x = var1, y = var2)) +   geom_line() +   geom_pointless(aes(color = after_stat(location)),     location = \"all\",     size = 3   ) +   scale_color_manual(values = cols)"},{"path":"https://flrd.github.io/ggpointless/dev/index.html","id":"geom_lexis","dir":"","previous_headings":"What will you get","what":"geom_lexis","title":"Additional Geometries and Stats for ggplot2","text":"geom_lexis() combination segment point layer. Given start value end value, function draws 45° line indicates duration event. Required x xend aesthetics, y yend coordinates calculated.  See also LexisPlotR package.","code":"df2 <- data.frame(   key = c(\"A\", \"B\", \"B\", \"C\", \"D\"),   x = c(0, 1, 6, 5, 6),   xend = c(5, 4, 10, 8, 10) )  ggplot(df2, aes(x = x, xend = xend, color = key)) +   geom_lexis(aes(linetype = after_stat(type)), size = 2) +   coord_equal() +   scale_x_continuous(breaks = c(df2$x, df2$xend)) +   scale_color_manual(values = cols) +   scale_linetype_identity() +   theme(panel.grid.minor = element_blank())"},{"path":"https://flrd.github.io/ggpointless/dev/index.html","id":"geom_chaikin","dir":"","previous_headings":"What will you get","what":"geom_chaikin","title":"Additional Geometries and Stats for ggplot2","text":"Chaikin’s corner cutting algorithm let’s turn ragged path polygon smoothed one. Credit Farbfetzen / corner_cutting.  See also smoothr package.","code":"lst <- list(   data = list(     closed_square = data.frame(x = c(0, 0, 1, 1), y = c(2, 3, 3, 2)),     whale = data.frame(x = c(.5, 4, 4, 3.5, 2), y = c(.5, 1, 1.5, .5, 3)),     open_triangle = data.frame(x = c(3, 3, 5), y = c(2, 3, 3)),     closed_triangle = data.frame(x = c(3.5, 5, 5), y = c(0, 0, 1.5))   ),   color = cols,   closed = c(TRUE, TRUE, FALSE, TRUE) )  ggplot(mapping = aes(x, y)) +   lapply(lst$data, function(i) {     geom_polygon(data = i, fill = NA, linetype = \"12\", color = \"#777777\")   }) +   Map(f = function(data, color, closed) {     geom_chaikin(data = data, color = color, closed = closed)   }, data = lst$data, color = lst$color, closed = lst$closed) +   geom_point(data = data.frame(x = 1.5, y = 1.5)) +   coord_equal()"},{"path":"https://flrd.github.io/ggpointless/dev/index.html","id":"geom_catenary","dir":"","previous_headings":"What will you get","what":"geom_catenary","title":"Additional Geometries and Stats for ggplot2","text":"Draws flexible curve simulates chain rope hanging loosely two fixed points. default, chain length twice Euclidean distance x/y combination used. See vignette(\"ggpointless\") details. Credit : dulnan/catenary-curve","code":"ggplot(data.frame(x = 1:5, y = sample(5)),        aes(x, y)) +    geom_catenary() +   geom_point(size = 3, colour = \"#f4ae1b\") #> Set chainLength to 23.7"},{"path":"https://flrd.github.io/ggpointless/dev/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"Additional Geometries and Stats for ggplot2","text":"addition geoms & stats, following data sets contained ggpointless: co2_ml : CO2 records taken Mauna Loa covid_vac : COVID-19 Cases Deaths Vaccination Status female_leaders : Elected appointed female heads state government examples call vignette(\"examples\").","code":""},{"path":"https://flrd.github.io/ggpointless/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Additional Geometries and Stats for ggplot2","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/co2_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","title":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","text":"Atmospheric Carbon Dioxide Dry Air Mole Fractions NOAA GML Carbon Cycle Cooperative Global Air Sampling Network. Monthly time series constructed daily mean values, March 1958 January 2022.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/co2_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","text":"","code":"co2_ml"},{"path":"https://flrd.github.io/ggpointless/dev/reference/co2_ml.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","text":"data frame 766 rows 5 variables date date measurement year year measurement month month measurement co2_ppm CO2 concentration, parts per million decade decade measurement","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/co2_ml.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","text":"Dr. Pieter Tans, NOAA/GML (gml.noaa.gov/ccgg/trends/) Dr. Ralph Keeling, Scripps Institution Oceanography (scrippsco2.ucsd.edu/). https://gml.noaa.gov/ccgg/trends/data.html","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/covid_vac.html","id":null,"dir":"Reference","previous_headings":"","what":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","title":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","text":"Data overall weekly rates COVID-19 cases deaths among fully vaccinated unvaccinated people aged 12 years older, according COVID-19 positive specimen collection date. Data covers periods April 4, December 25, 2021.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/covid_vac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","text":"","code":"covid_vac"},{"path":"https://flrd.github.io/ggpointless/dev/reference/covid_vac.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","text":"data frame 146 rows 4 variables date Week data collection incidence COVID-19 cases deaths, standardized age status vaccination status outcome COVID-19 cases deaths","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/covid_vac.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","text":"Centers Disease Control Prevention, Rates COVID-19 Cases Deaths Vaccination Status https://covid.cdc.gov/covid-data-tracker/#rates--vaccine-status","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/draw_key_lexis.html","id":null,"dir":"Reference","previous_headings":"","what":"Key glyphs for legends — draw_key_lexis","title":"Key glyphs for legends — draw_key_lexis","text":"geom associated function draws key geom needs displayed legend. functions called  draw_key_*(), * stands name respective key glyph. key glyphs geom_lexis() function draws short line 45° point end, see examples .","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/draw_key_lexis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key glyphs for legends — draw_key_lexis","text":"","code":"draw_key_pointless(data, params, size)  draw_key_sabline(data, params, linewidth, size)  draw_key_lexis(data, params, linewidth, size)"},{"path":"https://flrd.github.io/ggpointless/dev/reference/draw_key_lexis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key glyphs for legends — draw_key_lexis","text":"data single row data frame containing scaled aesthetics display key params list additional parameters supplied geom. size Width height key mm.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/draw_key_lexis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key glyphs for legends — draw_key_lexis","text":"grid grob.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/draw_key_lexis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Key glyphs for legends — draw_key_lexis","text":"","code":"df1 <- data.frame(x = c(0, 1), xend = c(2, 3), grp = c(\"A\", \"B\")) ggplot(df1, aes(x, xend = xend, color = grp)) +   geom_lexis()   # the glyph can be changed using the `key_glyph` argument ggplot(mtcars, aes(wt, mpg, color = \"red\")) +   geom_point(key_glyph = \"lexis\")"},{"path":"https://flrd.github.io/ggpointless/dev/reference/female_leaders.html","id":null,"dir":"Reference","previous_headings":"","what":"Female leaders of independent states. — female_leaders","title":"Female leaders of independent states. — female_leaders","text":"Data Wikipedia women elected appointed head state government respective countries since interwar period (1918–1939).","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/female_leaders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Female leaders of independent states. — female_leaders","text":"","code":"female_leaders"},{"path":"https://flrd.github.io/ggpointless/dev/reference/female_leaders.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Female leaders of independent states. — female_leaders","text":"data frame 131 rows 5 variables name Person startdate Start tenure enddate End tenure country Country power Executive non-executive","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/female_leaders.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Female leaders of independent states. — female_leaders","text":"wikipedia.org https://en.wikipedia.org/w/index.php?title=List_of_elected_and_appointed_female_heads_of_state_and_government&oldid=1078024588","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/female_leaders.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Female leaders of independent states. — female_leaders","text":"list includes women appointed governing committee parliament heads state government directly elected citizens. list include women chosen hereditary monarch.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_catenary.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a catenary curve — geom_catenary","title":"Draw a catenary curve — geom_catenary","text":"geom_catenary() draws catenary curve U-like shape, similar appearance parabola, .","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_catenary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a catenary curve — geom_catenary","text":"","code":"geom_catenary(   mapping = NULL,   data = NULL,   stat = \"catenary\",   position = \"identity\",   ...,   chainLength = NULL,   show.legend = NA,   inherit.aes = TRUE,   na.rm = FALSE )  stat_catenary(   mapping = NULL,   data = NULL,   geom = \"path\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   chainLength = NULL,   ... )"},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_catenary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a catenary curve — geom_catenary","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. chainLength Length chain two points. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. geom, stat Use override default connection geom_catenary stat_catenary.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_catenary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw a catenary curve — geom_catenary","text":"flexible chain rope loosely hung two fixed points, curve called catenary. Catenary, Latin word catēna, means \"chain\".","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_catenary.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Draw a catenary curve — geom_catenary","text":"geom_catenary() understands following aesthetics (required aesthetics bold): x y alpha color group linetype linewidth","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_catenary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw a catenary curve — geom_catenary","text":"","code":"dat <- data.frame(   x = c(0, 1, 2),   y = c(1, 2, -3) )  p <- ggplot(dat, aes(x, y)) p + geom_catenary() +   ylim(-4, NA) #> Set chainLength to 13   # use chainLength argument to change default behaviour # if you pick a chain length that is too short, a straight line is # drawn and a message about minimum chain length is shown p + geom_catenary(chainLength = 10) +   ylim(-4, NA) #> Minimum chain length from '(1, 2)' to '(2, -3)' is 5.1, drawing a straight line."},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_chaikin.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Chaikin's corner cutting algorithm to smooth a path — geom_chaikin","title":"Apply Chaikin's corner cutting algorithm to smooth a path — geom_chaikin","text":"Chaikin's corner-cutting algorithm can used smooth sharp corners path.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_chaikin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Chaikin's corner cutting algorithm to smooth a path — geom_chaikin","text":"","code":"geom_chaikin(   mapping = NULL,   data = NULL,   stat = \"chaikin\",   position = \"identity\",   ...,   iterations = 5,   ratio = 0.25,   closed = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_chaikin(   mapping = NULL,   data = NULL,   geom = \"path\",   position = \"identity\",   ...,   iterations = 5,   ratio = 0.25,   closed = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_chaikin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Chaikin's corner cutting algorithm to smooth a path — geom_chaikin","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. iterations Integer. Number iterations apply. Must 0 10. ratio Numeric. Cutting ratio must 0 1. closed Logical. Specify result open closed shape. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). geom, stat Use override default connection geom_chaikin stat_chaikin.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_chaikin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Chaikin's corner cutting algorithm to smooth a path — geom_chaikin","text":"Chaikin's corner cutting algorithm iteratively turns jagged path smooth path. recursion formula starts two vertices B, represent single corner path. , algorithm derives two new points: one specified ratio going point point B, one going B opposite direction. default, ratio 0.25 results two points: first 25% point 75% point (25% point B). new points form smoother path. algorithm applies rule pair new points. rule applied iterations times. maximum number iterations 10, default 5. ratio parameter  must number 0 1. ratio > 0.5, flipped 1 - ratio, message shown.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_chaikin.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Apply Chaikin's corner cutting algorithm to smooth a path — geom_chaikin","text":"geom_chaikin() understands following aesthetics (required aesthetics bold): x y alpha color group linetype linewidth","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_chaikin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Apply Chaikin's corner cutting algorithm to smooth a path — geom_chaikin","text":"Chaikin, G. algorithm high speed curve generation. Computer Graphics Image Processing 3 (1974), 346–349","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_chaikin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Chaikin's corner cutting algorithm to smooth a path — geom_chaikin","text":"","code":"set.seed(42) dat <- data.frame(   x = seq.int(10),   y = sample(15:30, 10) )  p1 <- ggplot(dat, aes(x, y)) +   geom_line(linetype = \"12\")  p1 +   geom_chaikin()   p1 +   geom_chaikin(iterations = 1)   triangle <- data.frame(x = c(0, 0, 1), y = c(0, 1, 1)) p2 <- ggplot(triangle, aes(x, y)) +   geom_path(linetype = \"12\") +   coord_equal()  # ratio let's you control p2 + geom_chaikin(ratio = .1)  p2 + geom_chaikin(ratio = .5)   # closed parameter to generate a closed shape - or not p2 + geom_chaikin(iterations = 5, ratio = 0.25, closed = FALSE) # default  p2 + geom_chaikin(closed = TRUE)"},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_lexis.html","id":null,"dir":"Reference","previous_headings":"","what":"Display events of different cohorts in form of a lexis charts — geom_lexis","title":"Display events of different cohorts in form of a lexis charts — geom_lexis","text":"geom can used plot 45° lifelines cohort. Lexis diagrams named Wilhelm Lexis used demographers century.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_lexis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display events of different cohorts in form of a lexis charts — geom_lexis","text":"","code":"geom_lexis(   mapping = NULL,   data = NULL,   ...,   point_show = TRUE,   point_colour = NULL,   point_size = deprecated(),   gap_filler = TRUE,   lineend = \"round\",   linejoin = \"round\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_lexis(   mapping = NULL,   data = NULL,   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_lexis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display events of different cohorts in form of a lexis charts — geom_lexis","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. point_show logical. point shown end segment? TRUE default point_colour color point point_size deprecated, use size gap_filler logical. gaps filled? TRUE default lineend line end style (round, butt, square) linejoin line join style (round, mitre, bevel) na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_lexis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display events of different cohorts in form of a lexis charts — geom_lexis","text":"geom draws 45° lines start end 'lifetime'. combination segment, point. Besides y yend coordinates geom creates one additional variable called type layer data. might want map aesthetic ggplot2::after_stat(), see Examples section vignette(\"ggpointless\") details. Rows data either missing x xend values removed (segments must start end somewhere).","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_lexis.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Display events of different cohorts in form of a lexis charts — geom_lexis","text":"geom_lexis() understands following aesthetics (required aesthetics bold): x xend alpha color fill group shape size linetype linewidth stroke","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_lexis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display events of different cohorts in form of a lexis charts — geom_lexis","text":"","code":"df1 <- data.frame(   key = c(\"A\", \"B\", \"B\", \"C\", \"D\", \"E\"),   start = c(0, 1, 6, 5, 6, 9),   end = c(5, 4, 10, 9, 8, 11) ) p <- ggplot(df1, aes(x = start, xend = end, color = key)) p +   geom_lexis()  p +   geom_lexis(gap_filler = FALSE)  p +   geom_lexis(aes(linetype = after_stat(type)),     point_show = FALSE   )   # change point appearance p + geom_lexis(   point_colour = \"black\",   size = 3,   shape = 21,   fill = \"white\",   stroke = 1 )   # missing values will be removed df2 <- data.frame(   key = c(\"A\", \"B\", \"B\", \"C\", \"D\"),   start = c(0, 1, 7, 5, 6),   end = c(5, 4, 13, 9, NA) ) ggplot(df2, aes(x = start, xend = end, color = key)) +   geom_lexis() #> Warning: Removed 1 rows containing non-finite values (`stat_lexis()`).   # Ideally, `x` values should be increasing, unlike # in the next example df3 <- data.frame(x = Sys.Date() - 0:2, xend = Sys.Date() + 1:3) ggplot(df3, aes(x = x, xend = xend)) +   geom_lexis()   # If `x` is of class Date, `xend` can't be of class `POSIXt` or # `POSIXct`. The error is thrown by the `scales::date_trans` function. if (FALSE) { ggplot(   data.frame(x = Sys.Date(), xend = Sys.time()),   aes(x = x, xend = xend) ) +   geom_lexis() }"},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_pointless.html","id":null,"dir":"Reference","previous_headings":"","what":"Emphasize some observations with points — geom_pointless","title":"Emphasize some observations with points — geom_pointless","text":"wrapper around geom_point() one additional argument: location. allows emphasize observations, namely first, last, minima /maxima, see examples. geom particularly useful , hence name, hopefully conjunction geom_line() friends.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_pointless.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emphasize some observations with points — geom_pointless","text":"","code":"geom_pointless(   mapping = NULL,   data = NULL,   stat = \"pointless\",   position = \"identity\",   ...,   location = \"last\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE )  stat_pointless(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   ...,   location = \"last\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_pointless.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emphasize some observations with points — geom_pointless","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. location character vector specifying observations highlight, default \"last\". na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). geom, stat Overwrite default connection geom_pointless() stat_pointless().","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_pointless.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Emphasize some observations with points — geom_pointless","text":"location argument allows specify observations highlighted. location \"last\", default, single point plotted last non-missing observation. locations determined order appear data -- like geom_path() compared geom_line(). See vignette(\"ggpointless\") details.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_pointless.html","id":"overplotting","dir":"Reference","previous_headings":"","what":"Overplotting","title":"Emphasize some observations with points — geom_pointless","text":"Points may plotted top one another. location set \"\", order points plotted top bottom : \"first\" > \"last\" > \"minimum\" > \"maximum\". Otherwise, order determined specified location argument, also applies order legend key labels, see examples.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_pointless.html","id":"orientation","dir":"Reference","previous_headings":"","what":"Orientation","title":"Emphasize some observations with points — geom_pointless","text":"geom treats axis differently , can thus two orientations. Often orientation easy deduce combination given mappings types positional scales use. Thus, ggplot2 default try guess orientation layer . rare circumstances, orientation ambiguous guessing may fail. case orientation can specified directly using orientation parameter, can either \"x\" \"y\". value gives axis geom run along, \"x\" default orientation expect geom.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_pointless.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Emphasize some observations with points — geom_pointless","text":"geom_pointless() understands following aesthetics (required aesthetics bold): x y alpha color fill group shape size stroke","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_pointless.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Emphasize some observations with points — geom_pointless","text":"location locations, returned factor","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/geom_pointless.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Emphasize some observations with points — geom_pointless","text":"","code":"x <- seq(-pi, pi, length.out = 100) y <- outer(x, 1:5, FUN = function(x, y) sin(x * y))  df1 <- data.frame(   var1 = x,   var2 = rowSums(y) )  # not terribly useful on its own ... p <- ggplot(df1, aes(x = var1, y = var2)) p + geom_pointless()  p + geom_pointless(location = \"all\")   # ... but in conjunction with geom_line(), hopefully p <- p + geom_line() p + geom_pointless()  p + geom_pointless(location = c(\"first\", \"last\"))  p + geom_pointless(location = c(\"minimum\", \"maximum\"))  p + geom_pointless(location = c(\"all\"))   # The layer computes one additional variable, 'location', # that you can map e.g. to the color aesthetic p + geom_pointless(   aes(color = after_stat(location)),   location = c(\"all\"),   size = 3 )   # Example with missing first and last observations set.seed(42) df1 <- data.frame(x = 1:10, y = c(NA, sample(1:8), NA)) ggplot(df1, aes(x, y)) +   geom_line() +   geom_pointless(location = c(\"first\", \"last\")) #> Warning: Removed 2 rows containing non-finite values (`stat_pointless()`). #> Warning: Removed 2 rows containing missing values (`geom_line()`).   # Change the order in which points are drawn when they overlap df1 <- data.frame(var1 = 1:2, var2 = 1:2) cols <- c(   \"first\" = \"#f8766d\",   \"last\" = \"#7cae00\",   \"minimum\" = \"#00bfc4\",   \"maximum\" = \"#c77cff\" )  p <- ggplot(df1, aes(x = var1, y = var2)) +   geom_path() +   coord_equal() +   # makes comparision easier   scale_color_manual(values = cols)  # same as location = 'all' p + geom_pointless(aes(color = after_stat(location)),   location = c(\"first\", \"last\", \"minimum\", \"maximum\") ) +   labs(subtitle = \"same as location = 'all'\")   # reversed custom order p + geom_pointless(aes(color = after_stat(location)),   location = c(\"maximum\", \"minimum\", \"last\", \"first\") ) +   labs(subtitle = \"custom order\")   # same as location = 'all' again p + geom_pointless(aes(color = after_stat(location)),   location = c(\"maximum\", \"minimum\", \"last\", \"first\", \"all\") ) +   labs(subtitle = \"same as location = 'all' again\")   # Use stat_pointless() with a geom other than \"point\" set.seed(42) df1 <- data.frame(x = 1:10, y = sample(1:10)) ggplot(df1, aes(x, y)) +   geom_line() +   stat_pointless(     aes(yintercept = y, color = after_stat(location)),     location = c(\"maximum\", \"minimum\"),     geom = \"hline\"   )   # Example using facets # https://stackoverflow.com/q/29375169 p <- ggplot(economics_long, aes(x = date, y = value)) +   geom_line() +   facet_wrap(~variable, ncol = 1, scales = \"free_y\")  p +   geom_pointless(     aes(color = after_stat(location)),     location = c(\"minimum\", \"maximum\"),     size = 2   )"},{"path":"https://flrd.github.io/ggpointless/dev/reference/get_decades.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a year, get the decade — get_decades","title":"Given a year, get the decade — get_decades","text":"Given year, get decade","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/get_decades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a year, get the decade — get_decades","text":"","code":"get_decades(years, anno_domini = FALSE)"},{"path":"https://flrd.github.io/ggpointless/dev/reference/get_decades.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a year, get the decade — get_decades","text":"years numeric vector anno_domini logical; \"years Lord\" considered?","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/get_decades.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a year, get the decade — get_decades","text":"string length year","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/get_lexis.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a start, and end get the 'age' of an event — get_lexis","title":"Given a start, and end get the 'age' of an event — get_lexis","text":"Given start, end get 'age' event","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/get_lexis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a start, and end get the 'age' of an event — get_lexis","text":"","code":"get_lexis(x, xend)"},{"path":"https://flrd.github.io/ggpointless/dev/reference/get_lexis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a start, and end get the 'age' of an event — get_lexis","text":"x vector mode numeric xend vector mode numeric","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/get_lexis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a start, and end get the 'age' of an event — get_lexis","text":"data.frame","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/get_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset input data based on locations — get_locations","title":"Subset input data based on locations — get_locations","text":"Given data frame, functions returns subset. Returns data frame either \"first\" row, \"last\" row /row(s) contain minima maxima","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/get_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset input data based on locations — get_locations","text":"","code":"get_locations(   data = NULL,   location = c(\"first\", \"last\", \"minimum\", \"maximum\", \"all\") )"},{"path":"https://flrd.github.io/ggpointless/dev/reference/get_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset input data based on locations — get_locations","text":"data data.frame location character string specifying rows return: \"first\", \"last\" (default), \"minimum\", \"maximum\" \"\"","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/get_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset input data based on locations — get_locations","text":"data.frame","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/ggpointless-ggproto.html","id":null,"dir":"Reference","previous_headings":"","what":"Base ggproto classes for ggpointless — ggpointless-ggproto","title":"Base ggproto classes for ggpointless — ggpointless-ggproto","text":"creating new geom, stat, position, scale another package, need extend ggplot2::Geom, ggplot2::Stat, ggplot2::Position, ggplot2::Scale.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/ggpointless-ggproto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Base ggproto classes for ggpointless — ggpointless-ggproto","text":"info ggplot2-book.org","code":""},{"path":[]},{"path":"https://flrd.github.io/ggpointless/dev/reference/ggpointless-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggpointless: Additional Geometries and Stats for 'ggplot2' — ggpointless-package","title":"ggpointless: Additional Geometries and Stats for 'ggplot2' — ggpointless-package","text":"(aspirational) collection additional geometries statistics 'ggplot2'.","code":""},{"path":[]},{"path":"https://flrd.github.io/ggpointless/dev/reference/ggpointless-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggpointless: Additional Geometries and Stats for 'ggplot2' — ggpointless-package","text":"Maintainer: Markus Döring m4rkus.doering@gmail.com [copyright holder]","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/translate_shape_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a number, get the corresponding point shape — translate_shape_string","title":"Given a number, get the corresponding point shape — translate_shape_string","text":"Given number, get corresponding point shape","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/translate_shape_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a number, get the corresponding point shape — translate_shape_string","text":"","code":"translate_shape_string(shape_string)"},{"path":"https://flrd.github.io/ggpointless/dev/reference/translate_shape_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a number, get the corresponding point shape — translate_shape_string","text":"shape_string character","code":""},{"path":"https://flrd.github.io/ggpointless/dev/reference/translate_shape_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a number, get the corresponding point shape — translate_shape_string","text":"data.frame","code":""},{"path":"https://flrd.github.io/ggpointless/dev/news/index.html","id":"ggpointless-development-version","dir":"Changelog","previous_headings":"","what":"ggpointless (development version)","title":"ggpointless (development version)","text":"stat_catenary() longer wrongfully removes data points upper limit ylim() set maximum y-value dataset use plot (#1).","code":""},{"path":"https://flrd.github.io/ggpointless/dev/news/index.html","id":"ggpointless-010","dir":"Changelog","previous_headings":"","what":"ggpointless 0.1.0","title":"ggpointless 0.1.0","text":"CRAN release: 2024-02-08 New geom_catenary() stat_catenary() let draw hanging chain. geom_lexis() supports linewidth argument now, released ggplot2 v3.4.0. geom_lexis() deprecates point_size argument favour size.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/news/index.html","id":"ggpointless-003","dir":"Changelog","previous_headings":"","what":"ggpointless 0.0.3","title":"ggpointless 0.0.3","text":"CRAN release: 2022-08-25 New geom_chaikin() stat_chaikin() apply Chaikin’s corner cutting algorithm ragged paths.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/news/index.html","id":"ggpointless-002","dir":"Changelog","previous_headings":"","what":"ggpointless 0.0.2","title":"ggpointless 0.0.2","text":"CRAN release: 2022-06-08 New geom_lexis() stat_lexis() draw lexis graphs. New female_leaders dataset available.","code":""},{"path":"https://flrd.github.io/ggpointless/dev/news/index.html","id":"ggpointless-001","dir":"Changelog","previous_headings":"","what":"ggpointless 0.0.1","title":"ggpointless 0.0.1","text":"CRAN release: 2022-03-08 New geom_pointless() stat_pointless() emphazise observations. New data sets covid_vac co2_ml added.","code":""}]
