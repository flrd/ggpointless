[{"path":"https://flrd.github.io/ggpointless/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ggpointless authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://flrd.github.io/ggpointless/articles/examples.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"ggpointless examples","text":"","code":"library(ggplot2) library(ggpointless) library(ggtext) text_size <- 2.5 text_color <- \"#4b4c4d\"  theme_set(theme_minimal() +              theme(plot.caption = element_text(hjust = 0)) +              theme(plot.caption.position = \"plot\") +             theme(text = element_text(size = 9, color = text_color)) +             theme(axis.ticks.length.x = unit(0, \"mm\")) +              theme(axis.ticks.length.y = unit(0, \"mm\")) +             # https://stackoverflow.com/a/17312440/8583393             theme(axis.title = element_text(size = text_size * 1/0.352777778)) +             theme(axis.title.x = element_text(hjust = 1)) +              theme(axis.title.y = element_text(hjust = 1, angle = 0)) +             theme(panel.grid.minor = element_blank()) +             theme(legend.position = \"none\") +             theme(plot.title = element_text(face = \"bold\")) +             theme(plot.title.position = \"plot\")           )"},{"path":"https://flrd.github.io/ggpointless/articles/examples.html","id":"carbon-dioxide-concentration-in-the-atmosphere","dir":"Articles","previous_headings":"","what":"Carbon Dioxide Concentration in the Atmosphere","title":"ggpointless examples","text":"’ll start recreate Gregor Aisch’s plot carbon dioxide concentration time. co2_ml data.frame monthly CO2 measurements March 1958 January 2022, taken Mauna Loa, Hawaii . order plot line decade common scale, first need add one additional variable co2_ml ’ll call date_scale. Also, create helper function change date labels x-axis. See full code","code":"data(co2_ml) co2_ml$date_scale <- as.Date(sprintf(\"%d-%d-01\", 1950 + (co2_ml$year %% 10), co2_ml$month)) axis_labeller <- function(date) {   year <- as.integer(format(date, \"%Y\"))   tmp <- year - min(year, na.rm = TRUE)   replace(tmp, !tmp, \"\") } # layers p <- ggplot(co2_ml, aes(date_scale, co2_ppm, color = decade)) # sustainable level p <- p + geom_hline(aes(yintercept = 350),                     color = \"#dbd9db\",                     size = 1) p <- p + geom_text(aes(x = as.Date(\"1951-01-01\"), y = 348),                     label = \"sustainable level\",                    size = text_size + .3,                    color = \"#dbd9db\",                    hjust = \"left\",                    inherit.aes = FALSE) p <- p + geom_line() p <- p + geom_pointless(location = c(\"first\", \"last\"), size = 2) # label decades p <- p + geom_text(   data = subset(co2_ml, subset = decade != \"2020's\"),   aes(label = decade),   size = text_size,   stat = \"pointless\",   location = \"last\",   hjust = \"left\",   nudge_x = 40 ) # label at first year in decade p <- p + geom_text(   data = subset(co2_ml, subset = decade != \"1950's\"),   aes(label = year, group = decade),   size = text_size,   color = text_color,   stat = \"pointless\",   location = \"first\",   vjust = \"top\",   hjust = \"left\",   nudge_y = -2 )  # label at last year in decade p <- p + geom_text(   data = subset(co2_ml, subset = !(decade %in% c(\"1950's\", \"2020's\"))),   aes(label = year, group = decade),   size = text_size,   color = text_color,   stat = \"pointless\",   location = \"maximum\",   vjust = \"bottom\",   nudge_y = 1 )  # label the years 2014 to 2018 in the format '%y p <- p + lapply(2014:2018, function(yrs) {   geom_text(     data = subset(co2_ml, subset = year == yrs),     aes(label = sprintf(\"'%i\", year %% 100), group = year),     size = text_size,     color = text_color,     stat = \"pointless\",     location = \"maximum\",     vjust = \"bottom\",     nudge_y = 1   ) })  #  highlight all-time maximum p <- p + geom_pointless(   data = subset(co2_ml, subset = decade == \"2020's\"),   location = \"maximum\",   size = 8,   shape = 21,   fill = NA,   stroke = .9 )  # label all-time maximum p <- p + ggtext::geom_richtext(   aes(     x = date_scale + 500,     y = co2_ppm - 3,     group = NULL,     label = sprintf(\"**%g ppm**<br>%s %s\", round(co2_ppm), month.name[month], year)   ),   stat = \"pointless\",   location = \"maximum\",   size = text_size,   color = text_color,   fill = NA,   label.color = NA )  # draw curve from all-time maximum to its label p <- p + geom_curve(   data = subset(co2_ml, subset = decade == \"2020's\"),   aes(     x = date_scale + 90,     xend = date_scale + 500,     y = co2_ppm + 2,     yend = co2_ppm + 2   ),   stat = \"pointless\",   location = \"maximum\",   curvature = -.4,   size = .35,   color = text_color,   inherit.aes = FALSE )  # scales p <- p + scale_x_date(   breaks = as.Date(sprintf(\"%i-01-01\", c(1950:1960))),   labels = axis_labeller,   expand = expansion(mult = c(0.01, -.03)),   limits = as.Date(sprintf(\"%i-01-01\", c(1950, 1961))))  # colors p <- p + scale_color_manual(     values = c(       '#f4ae1b',       '#e99950',       '#dc8471',       '#cc708f',       '#b85baa',       '#9f46c6',       '#7a31e1',       '#311dfc'     )   )  # title, subtitle, caption p <- p +    labs(title = \"Carbon Dioxide Concentration in the Atmosphere\",        subtitle = \"Each line represents one decade, from 1958 to 2022. CO2 concentration is measured in\\nparts per million* (ppm).\",        caption = \"*The mole fraction of CO2, expressed as parts per million (ppm) is the number of molecules of CO2 in every million\\nmolecules of dried air (water vapor removed). The 'sustainable level' of 350ppm, equivalent to the 1990 levels, has\\nbeen identified by UN climate scientists.\\nSource: National Oceanic & Atmospheric Adm. (NOAA)\",        x = \"Years into decade\",        y = \"ppm\")"},{"path":"https://flrd.github.io/ggpointless/articles/examples.html","id":"rates-of-covid-19-cases-and-deaths-by-vaccination-status","dir":"Articles","previous_headings":"","what":"Rates of COVID-19 Cases and Deaths by Vaccination Status","title":"ggpointless examples","text":"following two charts show age-adjusted daily cases death rates vaccinated unvaccinated people 26 states USA. example inspired graphic New York Times Coronavirus Map Cases. , create helper function, time change facet labels: See full code","code":"data(covid_vac) covid_labeller <- function(label) {   sprintf(\"Average daily %ss\", label) } # layers p <- ggplot(covid_vac,             aes(               x = date,               y = incidence / 7,               color = interaction(outcome, status)               ) ) p <- p + geom_step(size = .65, direction = \"vh\") p <- p + geom_text(   aes(label = status),   stat = \"pointless\",   location = \"last\",   size = text_size,   nudge_x = 5,   hjust = \"left\") +   geom_pointless(size = 3)  # facets p <- p + facet_wrap(   vars(outcome),   ncol = 1,   scales = \"free_y\",   labeller = as_labeller(covid_labeller)   )  # scales p <- p + scale_x_date(expand = expansion(mult = c(0, 0.2))) p <- p + scale_y_continuous(n.breaks = 4) p <- p + scale_color_manual(   values = c(     \"case.unvaccinated\" = \"#050038\",     \"case.fully vaccinated\" = \"#9187f7\",     \"death.unvaccinated\" = \"#f14e1c\",     \"death.fully vaccinated\" = \"#f8a187\")   )  # title, subtitle, caption p <- p +    labs(     title = \"Rates for vaccinated and unvaccinated\",     subtitle = \"Per 100,000\",     x = NULL,     y = NULL,     caption = \"Source: Centers for Disease Control and Prevention\\nRates of COVID-19 Cases and Deaths by Vaccination Status, Apr 2021 to Dec 2021.\"   )  # theme p <- p + theme(panel.grid.major.x = element_blank()) p <- p + theme(strip.text = element_text(hjust = 0, face = \"bold\"))"},{"path":"https://flrd.github.io/ggpointless/articles/ggpointless.html","id":"add-some-points","dir":"Articles","previous_headings":"","what":"Add some points","title":"Introduction to ggpointless","text":"ggpointless package extension ggplot2 plotting library. goal emphasize certain observations accent provide useful context.  Just adding geom_pointless() ggplot(...) terribly useful teams geom_line() friends, hopefully. geom_pointless() understands arguments geom_point() plus one additional argument: location. can set \"first\", \"last\" – default –, \"minimum\", \"maximum\", \"\"; \"\" just shorthand select \"first\", \"last\", \"minimum\" \"maximum\".  addition, can use computed variable location map aesthetic, e.g. color.","code":"library(ggplot2) library(ggpointless)  x <- seq(-pi, pi, length.out = 100) y <- outer(x, 1:5, function(x, y) sin(x*y))  df1 <- data.frame(   var1 = x,   var2 = rowSums(y) )  p <- ggplot(df1, aes(x = var1, y = var2)) p + geom_pointless(location = c(\"first\", \"last\", \"minimum\", \"maximum\")) p <- p + geom_line() p + geom_pointless(location = \"all\", size = 3) p + geom_pointless(aes(color = after_stat(location)),                    location = \"all\",                    size = 3) +   theme(legend.position = \"bottom\")"},{"path":"https://flrd.github.io/ggpointless/articles/ggpointless.html","id":"order-and-orientation","dir":"Articles","previous_headings":"Add some points","what":"Order and orientation","title":"Introduction to ggpointless","text":"locations determined order appear data, like geom_path() compared geom_line(). can seen next example, sample data kindly taken geomtextpath package:  see first last two examples \"first\" \"minimum\" overlap, \"first\" wins \"minimum\". order points plotted (specified together) top bottom : \"first\" > \"last\" > \"minimum\" > \"maximum\".","code":"x <- seq(5, -1, length.out = 1000) * pi spiral <- data.frame(var1 = sin(x) * 1:1000,                       var2 = cos(x) * 1:1000)  p <- ggplot(spiral) +   geom_path() +   coord_equal(xlim = c(-1000, 1000), ylim = c(-1000, 1000)) +   theme(legend.position = \"none\")  p + aes(x = var1, y = var2) +   geom_pointless(aes(color = after_stat(location)),                  location = \"all\",                  size = 3) +   labs(subtitle = \"orientation = 'x'\")  p + aes(y = var1, x = var2) +   geom_pointless(aes(color = after_stat(location)),                  location = \"all\",                  size = 3) +   labs(subtitle = \"orientation = 'y'\")"},{"path":"https://flrd.github.io/ggpointless/articles/ggpointless.html","id":"pick-another-geom","dir":"Articles","previous_headings":"","what":"Pick another geom","title":"Introduction to ggpointless","text":"Just like stat_* functions, stat_pointless default geom, \"point\". means reverse can highlight e.g. minimum maximum different way, example horizontal line.","code":"set.seed(42) ggplot(data.frame(x = 1:10, y = sample(1:10)), aes(x, y)) +    geom_line() +    stat_pointless(     aes(yintercept = y, color = after_stat(location)),     location = c(\"minimum\", \"maximum\"),     geom = \"hline\"     ) +    guides(color = guide_legend(reverse = TRUE))"},{"path":"https://flrd.github.io/ggpointless/articles/ggpointless.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Introduction to ggpointless","text":"ggpointless package contains two data sets: co2_ml : CO2 records taken Mauna Loa covid_vac : COVID-19 Cases Deaths Vaccination Status See vignette(\"examples\") possible use cases.","code":""},{"path":"https://flrd.github.io/ggpointless/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Markus Döring. Author, maintainer.","code":""},{"path":"https://flrd.github.io/ggpointless/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Döring M (2022). ggpointless: Emphasize Observations Points. https://flrd.github.io/ggpointless/, https://github.com/flrd/ggpointless.","code":"@Manual{,   title = {ggpointless: Emphasize Observations with Points},   author = {Markus Döring},   year = {2022},   note = {https://flrd.github.io/ggpointless/, https://github.com/flrd/ggpointless}, }"},{"path":"https://flrd.github.io/ggpointless/conduct.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://flrd.github.io/ggpointless/index.html","id":"ggpointless-","dir":"","previous_headings":"","what":"Emphasize Observations with Points","title":"Emphasize Observations with Points","text":"goal emphasize certain observations accent provide additional context.","code":""},{"path":"https://flrd.github.io/ggpointless/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Emphasize Observations with Points","text":"can install development version ggpointless GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"flrd/ggpointless\")"},{"path":"https://flrd.github.io/ggpointless/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Emphasize Observations with Points","text":"two functions ggpointless package: geom_pointless(), powered stat_pointless(). accept arguments like geom_point(), addition location argument. can set \"first\", \"last\" (default), \"minimum\", \"maximum\", \"\", \"\" just shorthand select \"first\", \"last\", \"minimum\" \"maximum\". See vignette(\"ggpointless\") details.","code":"x <- seq(-pi, pi, length.out = 100) y <- outer(x, 1:5, function(x, y) sin(x*y))  df1 <- data.frame(   var1 = x,   var2 = rowSums(y) )  ggplot(df1, aes(x = var1, y = var2)) +   geom_line() +   geom_pointless(aes(color = after_stat(location)),                  location = \"all\",                  size = 3) +   scale_color_manual(values = c('#f4ae1b', '#d77e7b', '#a84dbd', '#311dfc')) +   theme_minimal()"},{"path":"https://flrd.github.io/ggpointless/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"Emphasize Observations with Points","text":"ggpointless package contains two data sets: co2_ml : CO2 records taken Mauna Loa, Hawaii covid_vac : COVID-19 Cases Deaths Vaccination Status See vignette(\"examples\") possible use cases.","code":""},{"path":"https://flrd.github.io/ggpointless/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Emphasize Observations with Points","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/co2_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","title":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","text":"Atmospheric Carbon Dioxide Dry Air Mole Fractions NOAA GML Carbon Cycle Cooperative Global Air Sampling Network. Monthly time series constructed daily mean values, March 1958 January 2022.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/co2_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","text":"","code":"co2_ml"},{"path":"https://flrd.github.io/ggpointless/reference/co2_ml.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","text":"data frame 766 rows 5 variables: date date measurement year year measurement month month measurement co2_ppm CO2 concentration, parts per million decade decade measurement","code":""},{"path":"https://flrd.github.io/ggpointless/reference/co2_ml.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","text":"Dr. Pieter Tans, NOAA/GML (gml.noaa.gov/ccgg/trends/) Dr. Ralph Keeling, Scripps Institution Oceanography (scrippsco2.ucsd.edu/). https://gml.noaa.gov/ccgg/trends/data.html","code":""},{"path":"https://flrd.github.io/ggpointless/reference/covid_vac.html","id":null,"dir":"Reference","previous_headings":"","what":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","title":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","text":"Data overall weekly rates COVID-19 cases deaths among fully vaccinated unvaccinated people aged 12 years older, according COVID-19 positive specimen collection date. Data covers periods April 4, December 25, 2021.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/covid_vac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","text":"","code":"covid_vac"},{"path":"https://flrd.github.io/ggpointless/reference/covid_vac.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","text":"data frame 146 rows 4 variables: date Week data collection incidence COVID-19 cases deaths, standardized age status vaccination status outcome COVID-19 cases deaths","code":""},{"path":"https://flrd.github.io/ggpointless/reference/covid_vac.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","text":"Centers Disease Control Prevention Rates COVID-19 Cases Deaths Vaccination Status https://covid.cdc.gov/covid-data-tracker/#rates--vaccine-status","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":null,"dir":"Reference","previous_headings":"","what":"Emphasize some observations with points — geom_pointless","title":"Emphasize some observations with points — geom_pointless","text":"wrapper around geom_point() one additional argument: location. allows emphazise observations, namely first, last, minima /maxima, see examples. geom particularly useful , hence name, hopefully conjunction geom_line() friends.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emphasize some observations with points — geom_pointless","text":"","code":"geom_pointless(   mapping = NULL,   data = NULL,   stat = \"pointless\",   position = \"identity\",   ...,   location = \"last\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE )  stat_pointless(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   ...,   location = \"last\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emphasize some observations with points — geom_pointless","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). position Position adjustment, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. location character vector specifying observations highlight, default \"last\". na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). geom, stat Overwrite default connection geom_pointless() stat_pointless().","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Emphasize some observations with points — geom_pointless","text":"argument location allows control observations highlight. location \"last\", default, single point plotted last non-missing observations. locations determined order appear data -- like geom_path() compared geom_line().","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"orientation","dir":"Reference","previous_headings":"","what":"Orientation","title":"Emphasize some observations with points — geom_pointless","text":"geom treats axis differently , can thus two orientations. Often orientation easy deduce combination given mappings types positional scales use. Thus, ggplot2 default try guess orientation layer . rare circumstances, orientation ambiguous guessing may fail. case orientation can specified directly using orientation parameter, can either \"x\" \"y\". value gives axis geom run along, \"x\" default orientation expect geom.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Emphasize some observations with points — geom_pointless","text":"geom_pointless() understands following aesthetics (required aesthetics bold): x y alpha color fill group shape size stroke","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Emphasize some observations with points — geom_pointless","text":"location locations, returned factor","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Emphasize some observations with points — geom_pointless","text":"","code":"x <- seq(-pi, pi, length.out = 100) y <- outer(x, 1:5, FUN = function(x, y) sin(x*y))  df1 <- data.frame(   var1 = x,   var2 = rowSums(y) )  # not terribly useful on its own ... p <- ggplot(df1, aes(x = var1, y = var2)) p + geom_pointless()  p + geom_pointless(location = \"all\")   # ... but in conjunction with geom_line(), hopefully p <- p + geom_line() p + geom_pointless()  p + geom_pointless(location = c(\"first\", \"last\"))  p + geom_pointless(location = c(\"minimum\", \"maximum\"))  p + geom_pointless(location = c(\"all\"))   # The layer computes one additional variable, `location`, # that you can map e.g. to the color aesthetic p + geom_pointless(  aes(color = after_stat(location)),  location = c(\"all\"),  size = 3  )   # Example with missing first and last observation set.seed(42) df1 <- data.frame(x = 1:10, y = c(NA, sample(1:8), NA)) ggplot(df1, aes(x, y)) +  geom_line() +  geom_pointless(location = c(\"first\", \"last\")) #> Warning: Removed 2 rows containing non-finite values (stat_pointless). #> Warning: Removed 2 row(s) containing missing values (geom_path).   # Use `stat_pointless()` with a geom other than \"point\" set.seed(42) df1 <- data.frame(x = 1:10, y = sample(1:10)) ggplot(df1, aes(x, y)) +  geom_line() +  stat_pointless(    aes(yintercept = y, color = after_stat(location)),    location = c(\"minimum\", \"maximum\"),    geom = \"hline\"  ) +  guides(color = guide_legend(reverse = TRUE))   if (FALSE) { # Example using facets, see https://stackoverflow.com/q/29375169 p <- ggplot(economics_long, aes(x = date, y = value)) +   geom_line() +  facet_wrap( ~ variable, ncol = 1, scales = 'free_y')  p +   geom_pointless(     aes(color = after_stat(location)),     location = c(\"minimum\", \"maximum\"),     size = 2   )  }"},{"path":"https://flrd.github.io/ggpointless/reference/get_decades.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a year, get the decade — get_decades","title":"Given a year, get the decade — get_decades","text":"Given year, get decade","code":""},{"path":"https://flrd.github.io/ggpointless/reference/get_decades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a year, get the decade — get_decades","text":"","code":"get_decades(years, anno_domini = FALSE)"},{"path":"https://flrd.github.io/ggpointless/reference/get_decades.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a year, get the decade — get_decades","text":"years numeric vector anno_domini logical; \"years Lord\" considered?","code":""},{"path":"https://flrd.github.io/ggpointless/reference/get_decades.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a year, get the decade — get_decades","text":"string length year","code":""},{"path":"https://flrd.github.io/ggpointless/reference/get_decades.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Given a year, get the decade — get_decades","text":"","code":"if (FALSE) { get_decades(c(2019:2021)) get_decades(c(-2019:-2021)) get_decades(c(-723, 111, 2022), anno_domini = TRUE) }"},{"path":"https://flrd.github.io/ggpointless/reference/get_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset input data based on locations — get_locations","title":"Subset input data based on locations — get_locations","text":"Given data frame, functions returns subset input. returns data frame either \"first\" row, \"last\" row /row(s) contain minima maxima","code":""},{"path":"https://flrd.github.io/ggpointless/reference/get_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset input data based on locations — get_locations","text":"","code":"get_locations(   data = NULL,   location = c(\"first\", \"last\", \"minimum\", \"maximum\", \"all\") )"},{"path":"https://flrd.github.io/ggpointless/reference/get_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset input data based on locations — get_locations","text":"data data.frame location character string specifying rows return: \"first\", \"last\" (default), \"minimum\", \"maximum\" \"\"","code":""},{"path":"https://flrd.github.io/ggpointless/reference/get_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset input data based on locations — get_locations","text":"data.frame","code":""},{"path":"https://flrd.github.io/ggpointless/reference/get_locations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset input data based on locations — get_locations","text":"","code":"if (FALSE) { get_locations(iris, c(\"first\", \"last\")) }"}]
