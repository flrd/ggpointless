[{"path":"https://flrd.github.io/ggpointless/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ggpointless authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://flrd.github.io/ggpointless/articles/examples.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"ggpointless examples","text":"","code":"library(ggplot2) library(ggpointless) library(ggtext) text_size <- 2.5 text_color <- \"#4b4c4d\"  theme_set(theme_minimal() +   theme(plot.caption = element_text(hjust = 0)) +   theme(plot.caption.position = \"plot\") +   theme(text = element_text(size = 9, color = text_color)) +   theme(axis.ticks.length.x = unit(0, \"mm\")) +   theme(axis.ticks.length.y = unit(0, \"mm\")) +   # https://stackoverflow.com/a/17312440/8583393   theme(axis.title = element_text(size = text_size * 1 / 0.352777778)) +   theme(axis.title.x = element_text(hjust = 1)) +   theme(axis.title.y = element_text(hjust = 1, angle = 0)) +   theme(panel.grid.minor = element_blank()) +   theme(legend.position = \"none\") +   theme(plot.title = element_text(face = \"bold\")) +   theme(plot.title.position = \"plot\"))"},{"path":"https://flrd.github.io/ggpointless/articles/examples.html","id":"carbon-dioxide-concentration-in-the-atmosphere","dir":"Articles","previous_headings":"","what":"Carbon Dioxide Concentration in the Atmosphere","title":"ggpointless examples","text":"’ll start recreate Gregor Aisch’s plot carbon dioxide concentration time. co2_ml data.frame monthly CO2 measurements March 1958 January 2022, taken Mauna Loa, Hawaii . order plot line decade common scale, first need add one additional variable co2_ml ’ll call date_scale. Also, create helper function change date labels x-axis. See full code","code":"data(co2_ml) co2_ml$date_scale <- as.Date(sprintf(\"%d-%d-01\", 1950 + (co2_ml$year %% 10), co2_ml$month)) axis_labeller <- function(date) {   year <- as.integer(format(date, \"%Y\"))   tmp <- year - min(year, na.rm = TRUE)   replace(tmp, !tmp, \"\") } # layers p1 <- ggplot(co2_ml, aes(date_scale, co2_ppm, color = decade)) # sustainable level p1 <- p1 + geom_hline(aes(yintercept = 350),   color = \"#dbd9db\",   size = 1 ) p1 <- p1 + geom_text(aes(x = as.Date(\"1951-01-01\"), y = 348),   label = \"sustainable level\",   size = text_size + .3,   color = \"#dbd9db\",   hjust = \"left\",   inherit.aes = FALSE ) p1 <- p1 + geom_line() p1 <- p1 + geom_pointless(location = c(\"first\", \"last\"), size = 2) # label decades p1 <- p1 + geom_text(   data = subset(co2_ml, subset = decade != \"2020's\"),   aes(label = decade),   size = text_size,   stat = \"pointless\",   location = \"last\",   hjust = \"left\",   nudge_x = 40 ) # label at first year in decade p1 <- p1 + geom_text(   data = subset(co2_ml, subset = decade != \"1950's\"),   aes(label = year, group = decade),   size = text_size,   color = text_color,   stat = \"pointless\",   location = \"first\",   vjust = \"top\",   hjust = \"left\",   nudge_y = -2 )  # label at last year in decade p1 <- p1 + geom_text(   data = subset(co2_ml, subset = !(decade %in% c(\"1950's\", \"2020's\"))),   aes(label = year, group = decade),   size = text_size,   color = text_color,   stat = \"pointless\",   location = \"maximum\",   vjust = \"bottom\",   nudge_y = 1 )  # label the years 2014 to 2018 in the format '%y p1 <- p1 + lapply(2014:2018, function(yrs) {   geom_text(     data = subset(co2_ml, subset = year == yrs),     aes(label = sprintf(\"'%i\", year %% 100), group = year),     size = text_size,     color = text_color,     stat = \"pointless\",     location = \"maximum\",     vjust = \"bottom\",     nudge_y = 1   ) })  #  highlight all-time maximum p1 <- p1 + geom_pointless(   data = subset(co2_ml, subset = decade == \"2020's\"),   location = \"maximum\",   size = 8,   shape = 21,   fill = NA,   stroke = .9 )  # label all-time maximum p1 <- p1 + ggtext::geom_richtext(   aes(     x = date_scale + 500,     y = co2_ppm - 3,     group = NULL,     label = sprintf(\"**%g ppm**<br>%s %s\", round(co2_ppm), month.name[month], year)   ),   stat = \"pointless\",   location = \"maximum\",   size = text_size,   color = text_color,   fill = NA,   label.color = NA )  # draw curve from all-time maximum to its label p1 <- p1 + geom_curve(   data = subset(co2_ml, subset = decade == \"2020's\"),   aes(     x = date_scale + 90,     xend = date_scale + 500,     y = co2_ppm + 2,     yend = co2_ppm + 2   ),   stat = \"pointless\",   location = \"maximum\",   curvature = -.4,   size = .35,   color = text_color,   inherit.aes = FALSE )  # scales p1 <- p1 + scale_x_date(   breaks = as.Date(sprintf(\"%i-01-01\", c(1950:1960))),   labels = axis_labeller,   expand = expansion(mult = c(0.01, -.03)),   limits = as.Date(sprintf(\"%i-01-01\", c(1950, 1961))) )  # colors p1 <- p1 + scale_color_manual(   values = c(     \"#f4ae1b\",     \"#e99950\",     \"#dc8471\",     \"#cc708f\",     \"#b85baa\",     \"#9f46c6\",     \"#7a31e1\",     \"#311dfc\"   ) )  # title, subtitle, caption p1 <- p1 +   labs(     title = \"Carbon Dioxide Concentration in the Atmosphere\",     subtitle = \"Each line represents one decade, from 1958 to 2022. CO2 concentration is measured in\\nparts per million* (ppm).\",     caption = \"*The mole fraction of CO2, expressed as parts per million (ppm) is the number of molecules of CO2 in every million\\nmolecules of dried air (water vapor removed). The 'sustainable level' of 350ppm, equivalent to the 1990 levels, has\\nbeen identified by UN climate scientists.\\nSource: National Oceanic & Atmospheric Adm. (NOAA)\",     x = \"Years into decade\",     y = \"ppm\"   )"},{"path":"https://flrd.github.io/ggpointless/articles/examples.html","id":"rates-of-covid-19-cases-and-deaths-by-vaccination-status","dir":"Articles","previous_headings":"","what":"Rates of COVID-19 Cases and Deaths by Vaccination Status","title":"ggpointless examples","text":"following two charts show age-adjusted daily cases death rates vaccinated unvaccinated people 26 states USA. example inspired graphic New York Times Coronavirus Map Cases. , create helper function, time change facet labels: See full code","code":"data(covid_vac) covid_labeller <- function(label) {   sprintf(\"Average daily %ss\", label) } # layers p2 <- ggplot(   covid_vac,   aes(     x = date,     y = incidence / 7,     color = interaction(outcome, status)   ) ) p2 <- p2 + geom_step(size = .65, direction = \"vh\") p2 <- p2 + geom_text(   aes(label = status),   stat = \"pointless\",   location = \"last\",   size = text_size,   nudge_x = 5,   hjust = \"left\" ) +   geom_pointless(size = 3)  # facets p2 <- p2 + facet_wrap(   vars(outcome),   ncol = 1,   scales = \"free_y\",   labeller = as_labeller(covid_labeller) )  # scales p2 <- p2 + scale_x_date(expand = expansion(mult = c(0, 0.2))) p2 <- p2 + scale_y_continuous(n.breaks = 4) p2 <- p2 + scale_color_manual(   values = c(     \"case.unvaccinated\" = \"#050038\",     \"case.fully vaccinated\" = \"#9187f7\",     \"death.unvaccinated\" = \"#f14e1c\",     \"death.fully vaccinated\" = \"#f8a187\"   ) )  # title, subtitle, caption p2 <- p2 +   labs(     title = \"Rates for vaccinated and unvaccinated\",     subtitle = \"Per 100,000\",     x = NULL,     y = NULL,     caption = \"Source: Centers for Disease Control and Prevention\\nRates of COVID-19 Cases and Deaths by Vaccination Status, Apr 2021 to Dec 2021.\"   )  # theme p2 <- p2 + theme(panel.grid.major.x = element_blank()) p2 <- p2 + theme(strip.text = element_text(hjust = 0, face = \"bold\"))"},{"path":"https://flrd.github.io/ggpointless/articles/examples.html","id":"female-leaders-of-independent-states","dir":"Articles","previous_headings":"","what":"Female leaders of independent states","title":"ggpointless examples","text":"inspiration add geom_lexis() came Gregor Aisch. time post om Three decades European government leaders. Unlike example, use data elected female leaders, scapped Wikipedia article List elected appointed female heads state government. dataset female_leaders ships ggpointless package. See full code","code":"day_year_trans <- function() {   time_to_time_trans(from = \"day\", to = \"year\") } library(ggrepel)  # which leaders are in office for more than 12 years tmp <- aggregate(   days_in_office ~ name,   transform(female_leaders, days_in_office = enddate - startdate),   sum )  tmp <- subset(tmp, days_in_office / 365.25 > 12) leaders_long <- merge(tmp, female_leaders, by = \"name\") leaders_long <- leaders_long[order(leaders_long$name, leaders_long$enddate), ] leaders_long <- aggregate(. ~ name, leaders_long, tail, 1) leaders_long <- type.convert(leaders_long, as.is = TRUE) leaders_long$familyName <- vapply(   X = strsplit(leaders_long$name, split = \" \"),   FUN = `[`,   ... = 2,   FUN.VALUE = character(1) )   p3 <- ggplot(   subset(female_leaders, startdate > \"1960-01-01\"),   aes(     x = startdate,     xend = enddate,     group = name,     color = power   ) ) p3 <- p3 + geom_lexis(   aes(linetype = after_stat(type)),   size = .1,   point_size = 1 ) p3 <- p3 + coord_equal() p3 <- p3 + scale_x_date(expand = c(.02, .05)) # p3 <- p3 + scale_y_continuous(limits = function(x) x / 365.25) p3 <- p3 + scale_color_manual(values = c(   \"executive\" = \"#311dfc\",   \"non-executive\" = \"#f4ae1b\" )) p3 <- p3 + scale_linetype_identity() p3 <- p3 + labs(   title = \"Elected Female Leaders Since 1960\",   subtitle = \"Year in Office\",   caption = \"Source: Wikipedia\",   x = NULL,   y = NULL,   color = NULL ) p3 <- p3 + theme(legend.position = \"bottom\")  # add annotations p3 <- p3 +   geom_text_repel(     data = leaders_long, aes(       x = as.Date(enddate, origin = \"1970-01-01\"),       y = days_in_office,       colour = power,       label = familyName     ),     size = 2,     direction = \"y\",     nudge_y = 10,     inherit.aes = FALSE,     show.legend = FALSE) p3"},{"path":"https://flrd.github.io/ggpointless/articles/ggpointless.html","id":"geom_pointless","dir":"Articles","previous_headings":"","what":"geom_pointless","title":"Introduction to ggpointless","text":"geom_pointless() layer easily add minimal emphasis plots. function takes ’s power stat_pointless(), actually work, usually spotlight.  see, just adding geom_pointless() ggplot(...) terribly useful teams geom_line() friends, hopefully.  geom_pointless() behaves like geom_point() addition location argument. can set \"first\", \"last\", default, \"minimum\", \"maximum\", \"\"; \"\" just shorthand select \"first\", \"last\", \"minimum\" \"maximum\". addition, can use computed variable location map aesthetic, e.g. color.","code":"library(ggplot2) library(ggpointless)  x <- seq(-pi, pi, length.out = 100) y <- outer(x, 1:5, function(x, y) sin(x * y))  df1 <- data.frame(   var1 = x,   var2 = rowSums(y) )  p <- ggplot(df1, aes(x = var1, y = var2)) p + geom_pointless(location = c(\"first\", \"last\", \"minimum\", \"maximum\")) p <- p + geom_line() p + geom_pointless(location = \"all\", size = 3) p + geom_pointless(aes(color = after_stat(location)),   location = \"all\",   size = 3 ) +   theme(legend.position = \"bottom\")"},{"path":"https://flrd.github.io/ggpointless/articles/ggpointless.html","id":"order-and-orientation","dir":"Articles","previous_headings":"geom_pointless","what":"Order and orientation","title":"Introduction to ggpointless","text":"locations determined order appear data, like geom_path() compared geom_line(). can seen next example, sample data kindly taken geomtextpath package:  see first last two examples \"first\" \"minimum\" overlap, \"first\" wins \"minimum\". location set \"\", order points plotted top bottom : \"first\" > \"last\" > \"minimum\" > \"maximum\". Otherwise, order determined specified location argument, also applies order legend key labels.","code":"x <- seq(5, -1, length.out = 1000) * pi spiral <- data.frame(   var1 = sin(x) * 1:1000,   var2 = cos(x) * 1:1000 )  p <- ggplot(spiral) +   geom_path() +   coord_equal(xlim = c(-1000, 1000), ylim = c(-1000, 1000)) +   theme(legend.position = \"none\")  p + aes(x = var1, y = var2) +   geom_pointless(aes(color = after_stat(location)),     location = \"all\",     size = 3   ) +   labs(subtitle = \"orientation = 'x'\")  p + aes(y = var1, x = var2) +   geom_pointless(aes(color = after_stat(location)),     location = \"all\",     size = 3   ) +   labs(subtitle = \"orientation = 'y'\") cols <- c(   \"first\" = \"#f8766d\",    \"last\" = \"#7cae00\",    \"minimum\" = \"#00bfc4\",    \"maximum\" = \"#c77cff\"  )  df2 <- data.frame(   var1 = 1:2,   var2 = 1:2 )  p <- ggplot(df2, aes(x = var1, y = var2)) +   geom_path() +   coord_equal() +   scale_color_manual(values = cols)  # same as location = 'all' p + geom_pointless(aes(color = after_stat(location)),   location = c(\"first\", \"last\", \"minimum\", \"maximum\"),   size = 3 ) +   labs(subtitle = \"same as location = 'all'\") # reversed order p + geom_pointless(aes(color = after_stat(location)),   location = c(\"maximum\", \"minimum\", \"last\", \"first\"),   size = 3 ) +   labs(subtitle = \"custom order\") # same as location = 'all' again p + geom_pointless(aes(color = after_stat(location)),   location = c(\"maximum\", \"minimum\", \"last\", \"first\", \"all\"),   size = 3 ) +   labs(subtitle = \"same as location = 'all' again\")"},{"path":"https://flrd.github.io/ggpointless/articles/ggpointless.html","id":"pick-another-geom","dir":"Articles","previous_headings":"geom_pointless","what":"Pick another geom","title":"Introduction to ggpointless","text":"Just like stat_* functions, stat_pointless() default geom, \"point\". means reverse can highlight e.g. minimum maximum another way, example horizontal line.","code":"set.seed(42) ggplot(data.frame(x = 1:10, y = sample(1:10)), aes(x, y)) +   geom_line() +   stat_pointless(     aes(yintercept = y, color = after_stat(location)),     location = c(\"minimum\", \"maximum\"),     geom = \"hline\"   ) +   guides(color = guide_legend(reverse = TRUE))"},{"path":"https://flrd.github.io/ggpointless/articles/ggpointless.html","id":"plotting-live-lines-with-geom_lexis","dir":"Articles","previous_headings":"","what":"Plotting live lines with geom_lexis","title":"Introduction to ggpointless","text":"idea geom_lexis() function draw lifeline event ’s start ’s end. required aesthetics x xend.  gap event, shown horizontal line, can hidden gap_filler = FALSE. Also, geom_lexis() creates additional variable, type takes two values: “solid” “dotted”. can map type linetype aesthetic (aesthetic) using after_stat(), see . Since values type column contextual meaning, probably best used conjunction scale_linetype_identity() show legend.","code":"df1 <- data.frame(   key = c(\"A\", \"B\", \"B\", \"C\", \"D\"),   start = c(0, 1, 6, 5, 6),   end = c(5, 4, 10, 8, 10) )  p <- ggplot(df1, aes(x = start, xend = end, color = key)) +   coord_equal() p + geom_lexis() p + geom_lexis(gap_filler = FALSE) p + geom_lexis(   aes(linetype = after_scale(type)),    point_show = FALSE   ) +   scale_linetype_identity() #> Warning: Failed to apply `after_scale()` modifications to legend"},{"path":"https://flrd.github.io/ggpointless/articles/ggpointless.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Introduction to ggpointless","text":"ggpointless package contains following data sets: co2_ml : CO2 records taken Mauna Loa covid_vac : COVID-19 Cases Deaths Vaccination Status female_leaders : Elected appointed female heads state government See vignette(\"examples\") possible use cases.","code":""},{"path":"https://flrd.github.io/ggpointless/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Markus Döring. Author, maintainer.","code":""},{"path":"https://flrd.github.io/ggpointless/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Döring M (2022). ggpointless: Small Collection New Geometries, Stats 'ggplot2'. https://flrd.github.io/ggpointless/, https://github.com/flrd/ggpointless.","code":"@Manual{,   title = {ggpointless: A Small Collection of New Geometries, and Stats for 'ggplot2'},   author = {Markus Döring},   year = {2022},   note = {https://flrd.github.io/ggpointless/, https://github.com/flrd/ggpointless}, }"},{"path":"https://flrd.github.io/ggpointless/conduct.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://flrd.github.io/ggpointless/index.html","id":"ggpointless-","dir":"","previous_headings":"","what":"A Small Collection of New Geometries, and Stats \n    for ggplot2","title":"A Small Collection of New Geometries, and Stats \n    for ggplot2","text":"ggpointless extension ggplot2 library providing additional layers. following functions implemented small package: geom_pointless() / stat_pointless(): functions making easy add minimal emphasis plots means point layer. geom_lexis() / stat_lexis(): layer plot 45° ‘lifeline’ event","code":""},{"path":"https://flrd.github.io/ggpointless/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Small Collection of New Geometries, and Stats \n    for ggplot2","text":"","code":"install.packages(\"ggpointless\") # Or install the development version # install.packages(\"devtools\") devtools::install_github(\"flrd/ggpointless\")"},{"path":[]},{"path":"https://flrd.github.io/ggpointless/index.html","id":"geom_pointless","dir":"","previous_headings":"Usage","what":"geom_pointless","title":"A Small Collection of New Geometries, and Stats \n    for ggplot2","text":"Using functions geom_pointless(), constructor stat_pointless(), can highlight first, last observations, sample minimum maximum goal provide additional context. just visual sugar. geom_pointless() behaves like geom_point() addition location argument. can set \"first\", \"last\" (default), \"minimum\", \"maximum\", \"\", \"\" just shorthand select \"first\", \"last\", \"minimum\" \"maximum\".","code":"cols <- c('#f4ae1b', '#d77e7b', '#a84dbd', '#311dfc') x <- seq(-pi, pi, length.out = 500) y <- outer(x, 1:5, function(x, y) sin(x*y))  df1 <- data.frame(   var1 = x,   var2 = rowSums(y) )  ggplot(df1, aes(x = var1, y = var2)) +   geom_line() +   geom_pointless(aes(color = after_stat(location)),                  location = \"all\",                  size = 3) +   scale_color_manual(values = cols) +   theme_minimal()"},{"path":"https://flrd.github.io/ggpointless/index.html","id":"geom_lexis","dir":"","previous_headings":"Usage","what":"geom_lexis","title":"A Small Collection of New Geometries, and Stats \n    for ggplot2","text":"geom_lexis() combination segment point layer. Given start value end value, functions draws 45° line indicates duration event.  See vignette(\"ggpointless\") details.","code":"df2 <- data.frame(   key = c(\"A\", \"B\", \"B\", \"C\", \"D\"),   x = c(0, 1, 6, 5, 6),   xend = c(5, 4, 10, 8, 10) )  ggplot(df2, aes(x = x, xend = xend, color = key)) +   geom_lexis(aes(linetype = after_stat(type)), size = .5, point_size = 3) +   coord_equal() +   scale_x_continuous(breaks = c(df2$x, df2$xend)) +   scale_color_manual(values = cols) +   scale_linetype_identity() +   theme_minimal() +   theme(panel.grid.minor = element_blank())"},{"path":"https://flrd.github.io/ggpointless/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"A Small Collection of New Geometries, and Stats \n    for ggplot2","text":"ggpointless package contains following data sets: co2_ml : CO2 records taken Mauna Loa covid_vac : COVID-19 Cases Deaths Vaccination Status female_leaders : Elected appointed female heads state government See vignette(\"examples\") possible use cases.","code":""},{"path":"https://flrd.github.io/ggpointless/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"A Small Collection of New Geometries, and Stats \n    for ggplot2","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/co2_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","title":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","text":"Atmospheric Carbon Dioxide Dry Air Mole Fractions NOAA GML Carbon Cycle Cooperative Global Air Sampling Network. Monthly time series constructed daily mean values, March 1958 January 2022.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/co2_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","text":"","code":"co2_ml"},{"path":"https://flrd.github.io/ggpointless/reference/co2_ml.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","text":"data frame 766 rows 5 variables date date measurement year year measurement month month measurement co2_ppm CO2 concentration, parts per million decade decade measurement","code":""},{"path":"https://flrd.github.io/ggpointless/reference/co2_ml.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Monthly CO2 records taken at Mauna Loa, since March 1958 — co2_ml","text":"Dr. Pieter Tans, NOAA/GML (gml.noaa.gov/ccgg/trends/) Dr. Ralph Keeling, Scripps Institution Oceanography (scrippsco2.ucsd.edu/). https://gml.noaa.gov/ccgg/trends/data.html","code":""},{"path":"https://flrd.github.io/ggpointless/reference/covid_vac.html","id":null,"dir":"Reference","previous_headings":"","what":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","title":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","text":"Data overall weekly rates COVID-19 cases deaths among fully vaccinated unvaccinated people aged 12 years older, according COVID-19 positive specimen collection date. Data covers periods April 4, December 25, 2021.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/covid_vac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","text":"","code":"covid_vac"},{"path":"https://flrd.github.io/ggpointless/reference/covid_vac.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","text":"data frame 146 rows 4 variables date Week data collection incidence COVID-19 cases deaths, standardized age status vaccination status outcome COVID-19 cases deaths","code":""},{"path":"https://flrd.github.io/ggpointless/reference/covid_vac.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Rates of COVID-19 Cases and Deaths by Vaccination Status — covid_vac","text":"Centers Disease Control Prevention, Rates COVID-19 Cases Deaths Vaccination Status https://covid.cdc.gov/covid-data-tracker/#rates--vaccine-status","code":""},{"path":"https://flrd.github.io/ggpointless/reference/draw_key_lexis.html","id":null,"dir":"Reference","previous_headings":"","what":"Key glyphs for legends — draw_key_lexis","title":"Key glyphs for legends — draw_key_lexis","text":"geom associated function draws key geom needs displayed legend. functions called  draw_key_*(), * stands name respective key glyph. key glyphs geom_lexis() function draws short line 45° point end, see examples .","code":""},{"path":"https://flrd.github.io/ggpointless/reference/draw_key_lexis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key glyphs for legends — draw_key_lexis","text":"","code":"draw_key_pointless(data, params, size)  draw_key_sabline(data, params, size)  draw_key_lexis(data, params, size)"},{"path":"https://flrd.github.io/ggpointless/reference/draw_key_lexis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key glyphs for legends — draw_key_lexis","text":"data single row data frame containing scaled aesthetics display key params list additional parameters supplied geom. size Width height key mm.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/draw_key_lexis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key glyphs for legends — draw_key_lexis","text":"grid grob.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/draw_key_lexis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Key glyphs for legends — draw_key_lexis","text":"","code":"df1 <- data.frame(x = c(0, 1), xend = c(2, 3), grp = c(\"A\", \"B\")) ggplot(df1, aes(x, xend = xend, color = grp)) +   geom_lexis()   # the glyph can be changed using the `key_glyph` argument ggplot(mtcars, aes(wt, mpg, color = \"red\")) +   geom_point(key_glyph = \"lexis\")"},{"path":"https://flrd.github.io/ggpointless/reference/female_leaders.html","id":null,"dir":"Reference","previous_headings":"","what":"Female leaders of independent states. — female_leaders","title":"Female leaders of independent states. — female_leaders","text":"Data Wikipedia women elected appointed head state government respective countries since interwar period (1918–1939).","code":""},{"path":"https://flrd.github.io/ggpointless/reference/female_leaders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Female leaders of independent states. — female_leaders","text":"","code":"female_leaders"},{"path":"https://flrd.github.io/ggpointless/reference/female_leaders.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Female leaders of independent states. — female_leaders","text":"data frame 131 rows 5 variables name Person startdate Start tenure enddate End tenure country Country power Executive non-executive","code":""},{"path":"https://flrd.github.io/ggpointless/reference/female_leaders.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Female leaders of independent states. — female_leaders","text":"wikipedia.org https://en.wikipedia.org/w/index.php?title=List_of_elected_and_appointed_female_heads_of_state_and_government&oldid=1078024588","code":""},{"path":"https://flrd.github.io/ggpointless/reference/female_leaders.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Female leaders of independent states. — female_leaders","text":"list includes women appointed governing committee parliament heads state government directly elected citizens. list include women chosen hereditary monarch.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_lexis.html","id":null,"dir":"Reference","previous_headings":"","what":"Lexis charts — geom_lexis","title":"Lexis charts — geom_lexis","text":"lexis geom used plot 45° \"lifelines\" cohort. Lexis diagrams used demographers century named Wilhelm Lexis. combination segment, starting 0 dot end.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_lexis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lexis charts — geom_lexis","text":"","code":"geom_lexis(   mapping = NULL,   data = NULL,   ...,   point_show = TRUE,   point_colour = NULL,   point_size = NULL,   gap_filler = TRUE,   lineend = \"round\",   linejoin = \"round\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://flrd.github.io/ggpointless/reference/geom_lexis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lexis charts — geom_lexis","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. point_show logical. point shown end segment? TRUE default point_colour color point point_size size point gap_filler logical. gaps filled? TRUE default lineend line end style (round, butt, square) linejoin line join style (round, mitre, bevel) na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_lexis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lexis charts — geom_lexis","text":"geom draws 45° lines start end 'lifetime'. Besides y yend coordinates geom creates one additional variable called type layer data. might want map aesthetic ggplot2::after_scale(), see Examples vignette(\"ggpointless\") details. Every x must non-missing, numeric value (segments must start somewhere), one xend values missing, set maximum x, message shown, see examples.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_lexis.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Lexis charts — geom_lexis","text":"geom_pointless() understands following aesthetics (required aesthetics bold): x xend alpha color fill group shape size linetype stroke","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_lexis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lexis charts — geom_lexis","text":"","code":"df1 <- data.frame(   key = c(\"A\", \"B\", \"B\", \"C\", \"D\", \"E\"),   start = c(0, 1, 6, 5, 6, 9),   end = c(5, 4, 10, 9, 8, 11) ) p <- ggplot(df1, aes(x = start, xend = end, color = key)) p +   geom_lexis()  p +   geom_lexis(gap_filler = FALSE)  p +   geom_lexis(aes(linetype = after_scale(type)),     point_show = FALSE   ) #> Warning: Failed to apply `after_scale()` modifications to legend   # missing xend values will be set to the maximum of `x` df1 <- data.frame(   key = c(\"A\", \"B\", \"B\", \"C\", \"D\"),   start = c(0, 1, 7, 5, 6),   end = c(5, 4, 13, 9, NA) ) ggplot(df1, aes(x = start, xend = end, color = key)) +   geom_lexis() #> Missing 'xend' values set to 13   # Ideally, `x` values should be increasing, unlike in the # next example df3 <- data.frame(x = Sys.Date() - 0:2, xend = Sys.Date() + 1:3) ggplot(df3, aes(x = x, xend = xend)) +   geom_lexis()   # If `x` is of class Date, `xend` can't be of class `POSIXt` or # `POSIXct`. The error is thrown by the scales::date_trans function. if (FALSE) { df4 <- data.frame(x = Sys.Date(), xend = Sys.time()) ggplot(df4, aes(x = x, xend = xend)) +   geom_lexis() }"},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":null,"dir":"Reference","previous_headings":"","what":"Emphasize some observations with points — geom_pointless","title":"Emphasize some observations with points — geom_pointless","text":"wrapper around geom_point() one additional argument: location. allows emphasize observations, namely first, last, minima /maxima, see examples. geom particularly useful , hence name, hopefully conjunction geom_line() friends.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emphasize some observations with points — geom_pointless","text":"","code":"geom_pointless(   mapping = NULL,   data = NULL,   stat = \"pointless\",   position = \"identity\",   ...,   location = \"last\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE )  stat_pointless(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   ...,   location = \"last\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emphasize some observations with points — geom_pointless","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). position Position adjustment, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. location character vector specifying observations highlight, default \"last\". na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). geom, stat Overwrite default connection geom_pointless() stat_pointless().","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Emphasize some observations with points — geom_pointless","text":"argument location allows control observations highlight. location \"last\", default, single point plotted default last non-missing observation. locations determined order appear data -- like geom_path() compared geom_line(). See vignette(\"ggpointless\") details.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"overplotting","dir":"Reference","previous_headings":"","what":"Overplotting","title":"Emphasize some observations with points — geom_pointless","text":"Points may plotted top one another. location set \"\", order points plotted top bottom : \"first\" > \"last\" > \"minimum\" > \"maximum\". Otherwise, order determined specified location argument, also applies order legend key labels, see examples.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"orientation","dir":"Reference","previous_headings":"","what":"Orientation","title":"Emphasize some observations with points — geom_pointless","text":"geom treats axis differently , can thus two orientations. Often orientation easy deduce combination given mappings types positional scales use. Thus, ggplot2 default try guess orientation layer . rare circumstances, orientation ambiguous guessing may fail. case orientation can specified directly using orientation parameter, can either \"x\" \"y\". value gives axis geom run along, \"x\" default orientation expect geom.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Emphasize some observations with points — geom_pointless","text":"geom_pointless() understands following aesthetics (required aesthetics bold): x y alpha color fill group shape size stroke","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Emphasize some observations with points — geom_pointless","text":"location locations, returned factor","code":""},{"path":"https://flrd.github.io/ggpointless/reference/geom_pointless.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Emphasize some observations with points — geom_pointless","text":"","code":"x <- seq(-pi, pi, length.out = 100) y <- outer(x, 1:5, FUN = function(x, y) sin(x * y))  df1 <- data.frame(   var1 = x,   var2 = rowSums(y) )  # not terribly useful on its own ... p <- ggplot(df1, aes(x = var1, y = var2)) p + geom_pointless()  p + geom_pointless(location = \"all\")   # ... but in conjunction with geom_line(), hopefully p <- p + geom_line() p + geom_pointless()  p + geom_pointless(location = c(\"first\", \"last\"))  p + geom_pointless(location = c(\"minimum\", \"maximum\"))  p + geom_pointless(location = c(\"all\"))   # The layer computes one additional variable, 'location', # that you can map e.g. to the color aesthetic p + geom_pointless(   aes(color = after_stat(location)),   location = c(\"all\"),   size = 3 )   # Example with missing first and last observations set.seed(42) df1 <- data.frame(x = 1:10, y = c(NA, sample(1:8), NA)) ggplot(df1, aes(x, y)) +   geom_line() +   geom_pointless(location = c(\"first\", \"last\")) #> Warning: Removed 2 rows containing non-finite values (stat_pointless). #> Warning: Removed 2 row(s) containing missing values (geom_path).   # Change the order in which points are drawn when they overlap df1 <- data.frame(var1 = 1:2, var2 = 1:2)  p <- ggplot(df1, aes(x = var1, y = var2)) +   geom_path() +   coord_equal()  # same as location = 'all' p + geom_pointless(aes(color = after_stat(location)),   location = c(\"first\", \"last\", \"minimum\", \"maximum\") )  # reversed custom order p + geom_pointless(aes(color = after_stat(location)),   location = c(\"maximum\", \"minimum\", \"last\", \"first\") )  # same as location = 'all' again p + geom_pointless(aes(color = after_stat(location)),   location = c(\"maximum\", \"minimum\", \"last\", \"first\", \"all\") )   # Use stat_pointless() with a geom other than \"point\" set.seed(42) df1 <- data.frame(x = 1:10, y = sample(1:10)) ggplot(df1, aes(x, y)) +   geom_line() +   stat_pointless(     aes(yintercept = y, color = after_stat(location)),     location = c(\"maximum\", \"minimum\"),     geom = \"hline\"   )   # Example using facets # https://stackoverflow.com/q/29375169 p <- ggplot(economics_long, aes(x = date, y = value)) +   geom_line() +   facet_wrap(~variable, ncol = 1, scales = \"free_y\")  p +   geom_pointless(     aes(color = after_stat(location)),     location = c(\"minimum\", \"maximum\"),     size = 2   )"},{"path":"https://flrd.github.io/ggpointless/reference/get_decades.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a year, get the decade — get_decades","title":"Given a year, get the decade — get_decades","text":"Given year, get decade","code":""},{"path":"https://flrd.github.io/ggpointless/reference/get_decades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a year, get the decade — get_decades","text":"","code":"get_decades(years, anno_domini = FALSE)"},{"path":"https://flrd.github.io/ggpointless/reference/get_decades.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a year, get the decade — get_decades","text":"years numeric vector anno_domini logical; \"years Lord\" considered?","code":""},{"path":"https://flrd.github.io/ggpointless/reference/get_decades.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a year, get the decade — get_decades","text":"string length year","code":""},{"path":"https://flrd.github.io/ggpointless/reference/get_lexis.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a start, and end get the 'age' of an event — get_lexis","title":"Given a start, and end get the 'age' of an event — get_lexis","text":"Given start, end get 'age' event","code":""},{"path":"https://flrd.github.io/ggpointless/reference/get_lexis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a start, and end get the 'age' of an event — get_lexis","text":"","code":"get_lexis(x, xend)"},{"path":"https://flrd.github.io/ggpointless/reference/get_lexis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a start, and end get the 'age' of an event — get_lexis","text":"x vector mode numeric xend vector mode numeric","code":""},{"path":"https://flrd.github.io/ggpointless/reference/get_lexis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a start, and end get the 'age' of an event — get_lexis","text":"data.frame","code":""},{"path":"https://flrd.github.io/ggpointless/reference/get_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset input data based on locations — get_locations","title":"Subset input data based on locations — get_locations","text":"Given data frame, functions returns subset. Returns data frame either \"first\" row, \"last\" row /row(s) contain minima maxima","code":""},{"path":"https://flrd.github.io/ggpointless/reference/get_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset input data based on locations — get_locations","text":"","code":"get_locations(   data = NULL,   location = c(\"first\", \"last\", \"minimum\", \"maximum\", \"all\") )"},{"path":"https://flrd.github.io/ggpointless/reference/get_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset input data based on locations — get_locations","text":"data data.frame location character string specifying rows return: \"first\", \"last\" (default), \"minimum\", \"maximum\" \"\"","code":""},{"path":"https://flrd.github.io/ggpointless/reference/get_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset input data based on locations — get_locations","text":"data.frame","code":""},{"path":"https://flrd.github.io/ggpointless/reference/ggpointless-ggproto.html","id":null,"dir":"Reference","previous_headings":"","what":"Base ggproto classes for ggpointless — ggpointless-ggproto","title":"Base ggproto classes for ggpointless — ggpointless-ggproto","text":"creating new geom, stat, position, scale another package, need extend ggplot2::Geom, ggplot2::Stat, ggplot2::Position, ggplot2::Scale.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/ggpointless-ggproto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Base ggproto classes for ggpointless — ggpointless-ggproto","text":"info ggplot2-book.org","code":""},{"path":[]},{"path":"https://flrd.github.io/ggpointless/reference/ggpointless-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggpointless: A Small Collection of New Geometries, and Stats for 'ggplot2' — ggpointless-package","title":"ggpointless: A Small Collection of New Geometries, and Stats for 'ggplot2' — ggpointless-package","text":"collection new geometries, stats ggplot2. geom_pointless() adds minimal emphasis plots making easy highlight first, last observations, sample minimum maximum. goal provide additional context. just visual sugar. geom_lexis() draws 45° lifeline event mimics lexis diagrams.","code":""},{"path":[]},{"path":"https://flrd.github.io/ggpointless/reference/ggpointless-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggpointless: A Small Collection of New Geometries, and Stats for 'ggplot2' — ggpointless-package","text":"Maintainer: Markus Döring m4rkus.doering@gmail.com","code":""},{"path":"https://flrd.github.io/ggpointless/reference/time_to_time_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Unit of time transformations — time_to_time_trans","title":"Unit of time transformations — time_to_time_trans","text":"Transform numeric vector assumed represent either number seconds, number days another unit time. Supported second, minute, hour, day, week, year, decade, century, see examples.","code":""},{"path":"https://flrd.github.io/ggpointless/reference/time_to_time_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unit of time transformations — time_to_time_trans","text":"","code":"time_to_time_trans(   from = c(\"day\", \"second\"),   to = c(\"century\", \"decade\", \"year\", \"month\", \"week\", \"day\", \"hour\", \"minute\",     \"second\"),   ... )"},{"path":"https://flrd.github.io/ggpointless/reference/time_to_time_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unit of time transformations — time_to_time_trans","text":"character string, unit time convert , \"day\" default, see examples character string, unit time convert , \"decade\" default, see examples ... Additional arguments passed scales::trans_new()","code":""},{"path":"https://flrd.github.io/ggpointless/reference/time_to_time_trans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unit of time transformations — time_to_time_trans","text":"new transformation object","code":""},{"path":[]},{"path":"https://flrd.github.io/ggpointless/reference/translate_shape_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a number, get the corresponding point shape — translate_shape_string","title":"Given a number, get the corresponding point shape — translate_shape_string","text":"Given number, get corresponding point shape","code":""},{"path":"https://flrd.github.io/ggpointless/reference/translate_shape_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a number, get the corresponding point shape — translate_shape_string","text":"","code":"translate_shape_string(shape_string)"},{"path":"https://flrd.github.io/ggpointless/reference/translate_shape_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a number, get the corresponding point shape — translate_shape_string","text":"shape_string character","code":""},{"path":"https://flrd.github.io/ggpointless/reference/translate_shape_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a number, get the corresponding point shape — translate_shape_string","text":"data.frame","code":""}]
